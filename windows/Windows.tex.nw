\documentclass[twocolumn]{report}

%******************************************************************************
% Prelude
%******************************************************************************
\newif\iffinal
\newif\ifverbose
\finaltrue\verbosefalse
% see also other newif in Macros.tex

%------------------------------------------------------------------------------
%history: 
%------------------------------------------------------------------------------

%thx to LP, changed for the better a few things:

%thx to codemap/codegraph/scheck:
% - TODO use cg to reduce backward deps, introduce globals.c, utils.c,
%   (harder to understand non layered code)
% - TODO use scheck to remove deadcode, dead prototypes, useless export
%   or mv as forward decl
%   (harder to understand big interface files)
% - TODO use cg to reduce number of globals by moving them closer to the
%   relevant file (or even function), better cluster the code
%   (harder to understand non functional code using lots of globals)

%thx to this manual, better understand X11?:

%history LP-ization:
% - skeleton, mostly copy paste of Template.tex.nw skeleton
% - put all content of files in the Extra section, via 'pfff -lpize'
%   which also now split in chunks!
%    * function, global, struct, enum, constant, macro(actually function)
%    * TODO ctor/dtor, dumper
%    * TODO [[xxx]] other fields, [[xxx]] extra fields
% - TODO read Extra section, identify concepts, first TOC
% - TODO distribute parts of the Extra section in the main file
% - TODO understand main(), LP split main, improve TOC
% - TODO understand main functions, LP split, cluster, improve TOC
% - TODO LP split the structures, use datalog for flow to field info
% - TODO nullify, boolify, errorify, enumify,  typeify,    scheckify, plan9ify
% - TODO aspecify advanced features! remove useless features
% - TODO add figures
% - TODO add explanations

%------------------------------------------------------------------------------
% Packages
%------------------------------------------------------------------------------

\usepackage{../docs/latex/noweb}
 \noweboptions{footnotesizecode,nomargintag}
 %note: allow chunk on different pages, less white space at bottom of pages
 \def\nwendcode{\endtrivlist \endgroup}
 \let\nwdocspar=\par
\usepackage{xspace}
\usepackage{verbatim}
%note: required by noweblatexpad for the \t \l \n in this file
\usepackage{fancyvrb}
\usepackage{url}
\iffinal
\usepackage{hyperref}
 \hypersetup{colorlinks=true}
\fi
\usepackage[pageref]{backref}
 \def\backref{{\footnotesize cited page(s)}~}
%\usepackage{cleveref} %\cref
%\usepackage{multirow}
\usepackage{booktabs} 
 \newcommand{\otoprule}{\midrule[\heavyrulewidth]}
\usepackage{graphicx}
 %\usepackage[margin=0.5in]{geometry}
 %  but eat the bottom when very low
 %\usepackage{fullpage} is deprecated 
 % => do the more manual below:
 \addtolength{\oddsidemargin}{-.850in}
 \addtolength{\evensidemargin}{-.850in}
 \addtolength{\textwidth}{1.70in}
 \addtolength{\topmargin}{-.850in}
 \addtolength{\textheight}{1.70in}
%\usepackage{minitoc}

%------------------------------------------------------------------------------
% Macros
%------------------------------------------------------------------------------
\input{../docs/latex/Macros}

%------------------------------------------------------------------------------
% Config
%------------------------------------------------------------------------------
\allcodefalse
% used for forward decl, pragmas, func decl, extern decl, stats, #ifdef,
% debugging macros

%\setcounter{tocdepth}{1}

%******************************************************************************
% Title
%******************************************************************************

\begin{document}

\title{
{\Huge 
Principia Softwarica: Plan9 Windowing System [[rio]]
}\\
{version 0.1}
}

\author{
Yoann Padioleau\\
\texttt{yoann.padioleau@gmail.com}
}

\maketitle 
\onecolumn
\hrule
\begin{quote}
    Copyright \copyright{} 2014 Yoann Padioleau \\
    Permission is granted to copy, distribute and/or modify this document,
    except all the source code it contains, under the terms of the GNU Free
    Documentation License, Version 1.3.
\end{quote}
\hrule

%CONFIG: \dominitoc

\iffinal
\begingroup
\hypersetup{linkcolor=blue}
% need to s/onecolumn/twocolumn in report.cls :) for \tableofcontents
\twocolumn
\tableofcontents
\endgroup
\else
\tableofcontents
\fi

%******************************************************************************
% Body
%******************************************************************************

\chapter{Introduction}

\section{Motivations}

The goal of this book is to present in full details the source code of
a real windowing system.
Why? Because I think it makes you a better programmer if
you fully understand how things work under the hood.

Here are other candidates that were considered but ultimately discarded:
\begin{itemize}
\item Mini X
\item Nano X (MicroWindows)
\item X11
\item Wayland
\end{itemize}
% nuttx has some graphic and windowing stack apparently too!

%nice set of screenshots of past famous GUIs:
%http://toastytech.com/guis/
%http://toastytech.com/guis/guitimeline.html

\section{Getting started}

\section{Requirements}

\section{About this document}
#include "../docs/latex/About.tex.nw"

\section{Copyright}

Most of this document is actually source code from Plan9, so
those parts are copyright by Lucent Technologies Inc.
The prose is mine and is licensed under the GNU Free Documentation
License.

\section{Acknowledgments}


\chapter{Overview}

\section{Windowing system principles}

% a demultiplexer essentially! toyapp run outside rio
% but with rio can have "virtual" screen, virtual keyboard/mouse

\section{[[rio]] services}
% the interface!  again the /dev/xxx ?
% can run rio inside rio!

\section{YYY file format}

\section{ZZZ Toy example}

\section{Code organization}

% graphic system part! see Graphics.tex.nw

% rio, frame?

\section{Architecture overview}

% kernel driver vs libs vs apps vs rio

% see 81/2.ps and rio.ps
% see panel.pdf

% part2: windows (rio)
% part3: toolkit (libpanel)

%http://tech.slashdot.org/story/14/06/19/1317227/x-window-system-turns-30-years-old?utm_source=slashdot&utm_medium=facebook
%"A server lets clients access a shared resource. On a file server, it's
%storage. On a web server, it's documents. On a compute server, it's
%processing. On an X server, the shared resource is the display, and
%clients are given access to it."

\section{Trace of a simple mouse click}
% event! find right window, dispatch

%###############################################################################

\chapter{Core Data Structures}

<<global font (windows/rio/dat.h)>>=
Font		*font;
@

<<global mousectl>>=
Mousectl	*mousectl;
@

<<global mouse>>=
Mouse	*mouse;
@

<<global keyboardctl>>=
Keyboardctl	*keyboardctl;
@

<<global display (windows/rio/dat.h)>>=
Display	*display;
@

<<global view>>=
Image	*view;
@

<<global wscreen>>=
Screen	*wscreen;
@

<<global boxcursor>>=
Cursor	boxcursor;
@

<<global crosscursor>>=
Cursor	crosscursor;
@

<<global sightcursor>>=
Cursor	sightcursor;
@

<<global whitearrow>>=
Cursor	whitearrow;
@

<<global query>>=
Cursor	query;
@

<<global corners (windows/rio/dat.h)>>=
Cursor	*corners[9];
@

<<global background>>=
Image	*background;
@

<<global lightgrey>>=
Image	*lightgrey;
@

<<global red (windows/rio/dat.h)>>=
Image	*red;
@

<<global window>>=
Window	**window;
@

<<global wkeyboard>>=
Window	*wkeyboard;	/* window of simulated keyboard */
@

<<global nwindow>>=
int		nwindow;
@

<<global snarffd>>=
int		snarffd;
@

<<global input>>=
Window	*input;
@

<<global all>>=
QLock	all;			/* BUG */
@

<<global filsys>>=
Filsys	*filsys;
@

<<global hidden>>=
Window	*hidden[100];
@

<<global nhidden>>=
int		nhidden;
@

<<global nsnarf>>=
int		nsnarf;
@

<<global snarf>>=
Rune*	snarf;
@

<<global scrolling>>=
int		scrolling;
@

<<global maxtab>>=
int		maxtab;
@

<<global winclosechan>>=
Channel*	winclosechan;
@

<<global deletechan>>=
Channel*	deletechan;
@

<<global startdir>>=
char		*startdir;
@

<<global sweeping>>=
int		sweeping;
@

<<global wctlfd>>=
int		wctlfd;
@

<<global srvpipe>>=
char		srvpipe[];
@

<<global srvwctl>>=
char		srvwctl[];
@

<<global errorshouldabort>>=
int		errorshouldabort;
@

<<global menuing>>=
int		menuing;		/* menu action is pending; waiting for window to be indicated */
@

<<global snarfversion>>=
int		snarfversion;	/* updated each time it is written */
@

<<global messagesize>>=
int		messagesize;		/* negotiated in 9P version setup */
@



\chapter{[[main()]]}


\chapter{Window, screen, display}

\chapter{The [[/dev/...]] Demultiplexer}

\chapter{The [[fsys]] Server}

\chapter{The threads}
% see rio presentation with architecture

\section{Keyboard thread}

\section{Mouse thread}

\section{Window threads}


\chapter{[[Xfid]]}

\chapter{[[Window]]}

\chapter{[[Frame]]}

\chapter{Changing Cursor}
% put pictures instead of code :)
% what is the code that takes the hexa data and draw?

\chapter{System Menus}

\chapter{Xterm}
% fake /dev/cons

\chapter{Widgets}

\section{Frame}
% have libframe/ but also a frame widge in libpanel

\section{Scrolling}
% have also a menu in libpanel, scrollbar

\section{Menu}
% have also a menu in libpanel, popup, pulldown

\section{Libpanel}
% different alloc, different event loop, 
% and the Panel main data structure

\section{Button}

\section{Label}

\section{Text entry}

\section{Completion}

\section{Slider}

\section{List}

\section{Pack}

\section{Canvas}

\section{Text view}

\section{Rich text}


\chapter{Advanced Topics}

\section{Snarf}

\section{Plumb}


\chapter{Conclusion}

\appendix

\chapter{Debugging}

\chapter{Profiling}

\chapter{Error Managment}

\chapter{Libc}

\chapter{Extra Code}

\ifallcode
#include "Windows_extra.tex.nw"
\fi

\chapter{Changelog}
\label{sec:changelog}

\chapter{Glossary}
\label{sec:glossary}

\begin{verbatim}
\end{verbatim}

\chapter*{Indexes}
\addcontentsline{toc}{section}{Index}

%\chapter{References} 
\addcontentsline{toc}{section}{References}

\begin{thebibliography}{99}

\bibitem[1]{wp-literate-programming} Donald Knuth,,
{\em Literate Programming}, 
\url{http://en.wikipedia.org/wiki/Literate\_Program}

\bibitem[2]{noweb} Norman Ramsey,
{\em Noweb}, 
\url{http://www.cs.tufts.edu/~nr/noweb/}

\bibitem[3]{syncweb} Yoann Padioleau,
{\em Syncweb, literate programming meets unison}, 
\url{http://padator.org/software/project-syncweb/readme.txt}

\end{thebibliography}

%******************************************************************************
% Postlude
%******************************************************************************

\end{document}

