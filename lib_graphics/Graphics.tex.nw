\documentclass[twocolumn]{report}

%******************************************************************************
% Prelude
%******************************************************************************
\newif\iffinal
\newif\ifverbose
\finaltrue\verbosefalse
% see also other newif in Macros.tex

%------------------------------------------------------------------------------
%history: 
%------------------------------------------------------------------------------

%thx to LP, changed for the better a few things:

%thx to codemap/codegraph/scheck:
% - TODO use cg to reduce backward deps, introduce globals.c, utils.c,
%   (harder to understand non layered code)
% - TODO use scheck to remove deadcode, dead prototypes, useless export
%   or mv as forward decl
%   (harder to understand big interface files)
% - TODO use cg to reduce number of globals by moving them closer to the
%   relevant file (or even function), better cluster the code
%   (harder to understand non functional code using lots of globals)

%thx to this manual, better understand svgalib?:

%history LP-ization:
% - skeleton, mostly copy paste of Template.tex.nw skeleton
% - put all content of files in the Extra section, via 'pfff -lpize'
%   which also now split in chunks!
%    * function, global, struct, enum, constant, macro(actually function)
%    * TODO ctor/dtor, dumper
%    * TODO [[xxx]] other fields, [[xxx]] extra fields
% - TODO read Extra section, identify concepts, first TOC
% - TODO distribute parts of the Extra section in the main file
% - TODO understand main(), LP split main, improve TOC
% - TODO understand main functions, LP split, cluster, improve TOC
% - TODO LP split the structures, use datalog for flow to field info
% - TODO nullify, boolify, errorify, enumify,  typeify,    scheckify, plan9ify
% - TODO aspecify advanced features! remove useless features
% - TODO add figures
% - TODO add explanations


%------------------------------------------------------------------------------
% Packages
%------------------------------------------------------------------------------

\usepackage{../docs/latex/noweb}
 \noweboptions{footnotesizecode,nomargintag}
 %note: allow chunk on different pages, less white space at bottom of pages
 \def\nwendcode{\endtrivlist \endgroup}
 \let\nwdocspar=\par
\usepackage{xspace}
\usepackage{verbatim}
%note: required by noweblatexpad for the \t \l \n in this file
\usepackage{fancyvrb}
\usepackage{url}
\iffinal
\usepackage{hyperref}
 \hypersetup{colorlinks=true}
\fi
\usepackage[pageref]{backref}
 \def\backref{{\footnotesize cited page(s)}~}
%\usepackage{cleveref} %\cref
%\usepackage{multirow}
\usepackage{booktabs} 
 \newcommand{\otoprule}{\midrule[\heavyrulewidth]}
\usepackage{graphicx}
 %\usepackage[margin=0.5in]{geometry}
 %  but eat the bottom when very low
 %\usepackage{fullpage} is deprecated 
 % => do the more manual below:
 \addtolength{\oddsidemargin}{-.850in}
 \addtolength{\evensidemargin}{-.850in}
 \addtolength{\textwidth}{1.70in}
 \addtolength{\topmargin}{-.850in}
 \addtolength{\textheight}{1.70in}
%\usepackage{minitoc}

%------------------------------------------------------------------------------
% Macros
%------------------------------------------------------------------------------
\input{../docs/latex/Macros}

%------------------------------------------------------------------------------
% Config
%------------------------------------------------------------------------------
\allcodefalse
% used for forward decl, pragmas, func decl, extern decl, stats, #ifdef,
% debugging macros

%\setcounter{tocdepth}{1}

%******************************************************************************
% Title
%******************************************************************************

\begin{document}

\title{
{\Huge 
Principia Softwarica: The Plan9 Graphics System [[/dev/draw]]
}\\
{version 0.1}
}

\author{
Yoann Padioleau\\
\texttt{yoann.padioleau@gmail.com}
}

\maketitle 
\onecolumn
\hrule
\begin{quote}
    Copyright \copyright{} 2014 Yoann Padioleau \\
    Permission is granted to copy, distribute and/or modify this document,
    except all the source code it contains, under the terms of the GNU Free
    Documentation License, Version 1.3.
\end{quote}
\hrule

%CONFIG: \dominitoc

\iffinal
\begingroup
\hypersetup{linkcolor=blue}
% need to s/onecolumn/twocolumn in report.cls :) for \tableofcontents
\twocolumn
\tableofcontents
\endgroup
\else
\tableofcontents
\fi

%******************************************************************************
% Body
%******************************************************************************

\chapter{Introduction}

\section{Motivations}

The goal of this book is to present in full details the source code of
a real graphics system.
Why? Because I think it makes you a better programmer if
you fully understand how things work under the hood.

Here are other candidates that were considered but ultimately discarded:
\begin{itemize}
\item mks
\item svgalib
\item X11
\end{itemize}
% nuttx has some graphic and windowing stack apparently too!


\section{Getting started}

\section{Requirements}

\section{About this document}
#include "../docs/latex/About.tex.nw"

\section{Copyright}

Most of this document is actually source code from Plan9, so
those parts are copyright by Lucent Technologies Inc.
The prose is mine and is licensed under the GNU Free Documentation
License.

\section{Acknowledgments}

I would like to acknowledge of course Plan9's authors who wrote
most of this book: Rob Pike, Ken Thompson, Dave Presotto, Phil
Winterbottom, Russ Cox, and many other people from Bell Labs.

\chapter{Overview}

\section{Graphic system principles}

\section{[[/dev/draw]] services}
%maybe show code of toy app also?
% show the different devices?

% note that can run 'colors' in console outside rio! it just
% use /dev/draw, /dev/mouse, etc!

\section{A toy graphical application}
% e.g. colors



\section{Code organization}

% libdraw, libmemdraw, libmemlayer?
%#include <draw.h>
%#include <memdraw.h>
%#include <memlayer.h>
% lofs of files have similar name in libdraw/ and libmemdraw/

% kernel part? user part?





\section{Architecture overview}

% kernel driver vs libs vs apps vs rio


% part1: graphics (devvga)
%  why imagmem? why imagmem and mainmem? why not use other allocator?
%  see screen/user/notes.txt especially about the old way to get graphics on PC


\section{Initialization overview}

\section{Trace of a simple drawing operation}
% when do draw(), then where does it go? go in kernel?


%###############################################################################

\chapter{Core Data Structures}

% see draw.h big categories
% see the important globals init libdraw/init.c

\chapter{Geometry}

\section{[[Point]]}

\section{[[Rectangle]]}

\section{Line}

\section{Polyline}

\section{Arc}

\section{Spline}

\section{Ellipse}

\chapter{Colors}
% test code showing use of colors?

\section{Rgb}

\section{Color map}

\section{Pixel depth}

\section{Alpha}

\chapter{Fonts}
% test code showing use of font? display the core font?

\section{Text}
% and rune

\section{Compressed form}

\section{Font cache}

\chapter{Image}

\section{Reading images}

\section{Writing images}

%topng </dev/screen >screen.png :) = Grab

\chapter{Display, Screen, Window}

\section{Display}

\section{Screen}

\section{Window}
%extern int	newwindow(char*);
% but actually it returns an int that is probably similar to a fd
% and rio itself match this id to a Window structure

\section{Clipping}

\chapter{Input}

\section{Keyboard}

% show also kernel interface and refer to Kernel.tex.nw

\section{Mouse}

% show also kernel interface and refer to Kernel.tex.nw

\section{Events}

% have lots of dupes with events, menuhit.c vs emenuhit.c?

\chapter{Output}

\section{The screen}

\section{[[/dev/draw]]}
% this time no refer to Kernel.tex.nw, we inline it here!

\section{Cursor}

\chapter{Widgets}

\section{Libpanel}
% different alloc, different event loop, 
% and the Panel main data structure



\section{Frame}
% have libframe/ but also a frame widge in libpanel

\section{Scrolling}
% have also a menu in libpanel, scrollbar

\section{Menu}
% have also a menu in libpanel, popup, pulldown

\section{Button}

\section{Label}

\section{Text entry}

\section{Completion}

\section{Slider}

\section{List}

\section{Pack}

\section{Canvas}

\section{Text view}

\section{Rich text}

\chapter{Advanced Topics}

\chapter{Conclusion}

\appendix

\chapter{Debugging}

\chapter{Error Managment}

\chapter{VGA driver}

\chapter{Mathematics}

\section{Trigonometric functions}

\chapter{Libc}

\chapter{Extra Code}

\ifallcode
#include "Graphics_extra.tex.nw"
\fi

\chapter{Changelog}
\label{sec:changelog}

\chapter{Glossary}
\label{sec:glossary}

\begin{verbatim}
\end{verbatim}

\chapter*{Indexes}
\addcontentsline{toc}{section}{Index}

%\chapter{References} 
\addcontentsline{toc}{section}{References}

\begin{thebibliography}{99}

\bibitem[1]{wp-literate-programming} Donald Knuth,,
{\em Literate Programming}, 
\url{http://en.wikipedia.org/wiki/Literate\_Program}

\bibitem[2]{noweb} Norman Ramsey,
{\em Noweb}, 
\url{http://www.cs.tufts.edu/~nr/noweb/}

\bibitem[3]{syncweb} Yoann Padioleau,
{\em Syncweb, literate programming meets unison}, 
\url{http://padator.org/software/project-syncweb/readme.txt}

\end{thebibliography}

%******************************************************************************
% Postlude
%******************************************************************************

\end{document}
