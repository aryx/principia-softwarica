%!PS-Adobe-3.0
%%Creator: groff version 1.03
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%DocumentSuppliedResources: procset grops 1.03 0
%%Pages: 14
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.03 0

/setpacking where {
	pop
	currentpacking
	true setpacking
} if

/grops 120 dict dup begin 

% The ASCII code of the space character.
/SC 32 def

/A /show load def
/B { 0 SC 3 -1 roll widthshow } bind def
/C { 0 exch ashow } bind def
/D { 0 exch 0 SC 5 2 roll awidthshow } bind def
/E { 0 rmoveto show } bind def
/F { 0 rmoveto 0 SC 3 -1 roll widthshow } bind def
/G { 0 rmoveto 0 exch ashow } bind def
/H { 0 rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/I { 0 exch rmoveto show } bind def
/J { 0 exch rmoveto 0 SC 3 -1 roll widthshow } bind def
/K { 0 exch rmoveto 0 exch ashow } bind def
/L { 0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/M { rmoveto show } bind def
/N { rmoveto 0 SC 3 -1 roll widthshow } bind def
/O { rmoveto 0 exch ashow } bind def
/P { rmoveto 0 exch 0 SC 5 2 roll awidthshow } bind def
/Q { moveto show } bind def 
/R { moveto 0 SC 3 -1 roll widthshow } bind def
/S { moveto 0 exch ashow } bind def
/T { moveto 0 exch 0 SC 5 2 roll awidthshow } bind def

% name size font SF -

/SF {
	findfont exch
	[ exch dup 0 exch 0 exch neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

% name a c d font MF -

/MF {
	findfont
	[ 5 2 roll
	0 3 1 roll % b
	neg 0 0 ] makefont
	dup setfont
	[ exch /setfont cvx ] cvx bind def
} bind def

/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def

% BP -

/BP {
	/level0 save def
	1 setlinecap
	1 setlinejoin
	72 RES div dup scale
	LS {
		90 rotate
	} {
		0 PL translate
	} ifelse
	1 -1 scale
} bind def

/EP {
	level0 restore
	showpage
} bind def


% centerx centery radius startangle endangle DA -

/DA {
	newpath arcn stroke
} bind def

% x y SN - x' y'
% round a position to nearest (pixel + (.25,.25))

/SN {
	transform 
	.25 sub exch .25 sub exch
	round .25 add exch round .25 add exch
	itransform
} bind def
	
% endx endy startx starty DL -
% we round the endpoints of the line, so that parallel horizontal
% and vertical lines will appear even

/DL {
	SN
	moveto
	SN
	lineto stroke
} bind def

% centerx centery radius DC -

/DC {
	newpath 0 360 arc closepath
} bind def


/TM matrix def

%  width height centerx centery DE -

/DE {
	TM currentmatrix pop
	translate scale newpath 0 0 .5 0 360 arc closepath
	TM setmatrix
} bind def

% these are for splines

/RC /rcurveto load def
/RL /rlineto load def
/ST /stroke load def
/MT /moveto load def
/CL /closepath load def

% fill the last path

% amount FL -

/FL {
	currentgray exch setgray fill setgray
} bind def

% fill with the ``current color''

/BL /fill load def

/LW /setlinewidth load def
% new_font_name encoding_vector old_font_name RE -

/RE {
	findfont
	dup maxlength dict begin
	{
		1 index /FID ne { def } { pop pop } ifelse
	} forall
	/Encoding exch def
	dup /FontName exch def
	currentdict end definefont pop
} bind def

/DEFS 0 def

% hpos vpos EBEGIN -

/EBEGIN {
	moveto
	DEFS begin
} bind def

/EEND /end load def

/CNT 0 def
/level1 0 def

% llx lly newwid wid newht ht newllx newlly PBEGIN -

/PBEGIN {
	/level1 save def
	translate
	div 3 1 roll div exch scale
	neg exch neg exch translate
	% set the graphics state to default values
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {
		pop
		false setstrokeadjust
	} if
	/setoverprint where {
		pop
		false setoverprint
	} if
	newpath
	/CNT countdictstack def
	/showpage {} def
} bind def

/PEND {
	clear
	countdictstack CNT sub { end } repeat
	level1 restore
} bind def

end def

/setpacking where {
	pop
	setpacking
} if
%%EndResource
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron/zcaron
/Ydieresis/trademark/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam
/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J
/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z
/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl/endash
/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut/dotaccent/breve
/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash/quotedblbase/OE/Lslash
/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis
/copyright/ordfeminine/guilsinglleft/logicalnot/minus/registered/macron/degree
/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth
/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex
/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn
/ydieresis]def/Times-Roman@0 ENC0/Times-Roman RE/Times-Italic@0 ENC0
/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF 3(AS)211.446 123 S(imple X1)229.782 123 Q 3(1C)-.66 G
(lient Pr)293.118 123 Q(ogram)-.216 E(or)282.336 153 Q(How hard can it r)
155.508 183 Q(eally be to write `)-.216 E 3(`Hello, W)-.888 F(orld')-.66 E('?)
-.888 E/F1 10/Times-Italic@0 SF(David S. H. Rosenthal)243.42 207 Q/F2 10
/Times-Roman@0 SF(Sun Microsystems)250.915 225 Q(2550 Garcia A)252.965 237 Q
(ve.)-.74 E(Mountain V)234.83 249 Q(iew CA 94043)-.6 E(dshr@sun.com)257.98 273
Q F1(ABSTRACT)264.385 309 Q F2 .489(The `)108 336.6 R 2.989(`Hello, W)-.74 F
(orld')-.8 E 2.988('p)-.74 G .488
(rogram has achieved the status of a koan in the U)201.326 336.6 R/F3 8
/Times-Roman@0 SF(NIX)A F2(community)2.988 E(.)-.65 E -1.11(Va)108 348.6 S .121
(rious versions of this koan for V)1.11 F .121(ersion 1)-1.11 F 2.621(1o)-.37 G
2.621(ft)291.908 348.6 S .121(he X W)300.639 348.6 R .122
(indow System are examined,)-.4 F .122(as a)5.122 F .598
(guide to writing correct programs,)108 360.6 R .598
(and as an illustration of the importance of toolkits in)5.598 F(X1)108 372.6 Q
2.5(1p)-.37 G(rogramming.)132.35 372.6 Q
(Copyright \251 1987 by Sun Microsystems, Inc.)194.7 406.2 Q F3(1)377.3 402.2 Q
F2 3.691(`There, fourth)97 439.8 R 1.192
(graders discuss whether the machines prefer running simpler programs \(`)3.691
F(`It')-.74 E(s)-.55 E .154(easier for them,')97 451.8 R 5.154('`)-.74 G .153
(`They hardly have to do any work.')173.452 451.8 R .153
('\) or more complicated ones \(`)-.74 F .153(`They feel)-.74 F(proud,')97
463.8 Q 5('`)-.74 G(`It')136.34 463.8 Q 2.5(sl)-.55 G
(ike they are showing what they can do.')157.73 463.8 Q('\).')-.74 E(Sherry T)
237.075 481.8 Q(urkle)-.35 E F1(The Second Self)5 E F2(.)A/F4 10/Times-Bold@0
SF 2.5(1. Intr)72 523.8 R(oduction)-.18 E F2 .776(The `)72 539.4 R 3.276
(`Hello, W)-.74 F(orld')-.8 E 3.276('p)-.74 G .776
(rogram has achieved the status of a koan in the U)166.188 539.4 R F3(NIX)A(*)
385.344 535.4 Q F2(community)392.62 539.4 Q 5.776(.T)-.65 G .777(he spare ele-)
451.916 539.4 R(gance of:)72 551.4 Q/F5 6/Times-Roman@0 SF(#include <stdio.h>)
108 563.4 Q(main\(\))108 575.4 Q({)108 581.4 Q(printf\("Hello, W)114 587.4 Q
(orld\\n"\);)-.48 E(})108 593.4 Q F2 .896(has been much admired,)72 615 R .896
(and contrasted with the baroque complexity of other system')5.896 F 3.396(sa)
-.55 G .896(ttempts to solve)438.868 615 R(the problem.)72 627 Q F3(2)122.55
623 Q .32 LW 76 637 72 637 DL 80 637 76 637 DL 84 637 80 637 DL 88 637 84 637
DL 92 637 88 637 DL 96 637 92 637 DL 100 637 96 637 DL 104 637 100 637 DL 108
637 104 637 DL 112 637 108 637 DL 116 637 112 637 DL 120 637 116 637 DL 124 637
120 637 DL 128 637 124 637 DL 132 637 128 637 DL 136 637 132 637 DL 140 637 136
637 DL 144 637 140 637 DL 2.322(1. Permission)72 647 R .322(to use,)2.322 F
(copy)4.322 E 4.322(,m)-.52 G .322(odify and distribute this document for any \
purpose and without fee is hereby granted,)173.314 647 R(pro-)4.323 E .358(vid\
ed that the above copyright notice and this permission notice appear in all co\
pies,)72 657 R .358(and that the name of Sun Microsys-)4.358 F 2.483
(tems, Inc.)72 667 R .483(not be used in advertising or publicity pertaining t\
o distribution of the software without speci\214c,)2.483 F .484(written prior)
4.484 F 2.863(permission. Sun)72 677 R 2.863(Microsystems, Inc.)2.863 F .863(m\
akes no representations about the suitability of the software described herein\
 for)2.863 F(any purpose.)72 687 Q
(It is provided "as is" without express or implied warranty)4 E(.)-.52 E 4(*U)
72 697 S F5(NIX)85.776 697 Q F3(is a registered trademark of A)2 E(T&T)-.888 E
(.)-.592 E 4.455(2O)72 707 S 2.455(fc)86.231 707 S 2.455(ourse, it)94.902 707 R
.455(is important to note that this implementation has bugs.)2.455 F 2.456(Am)
4.456 G .456(ore correct,)322.152 707 R .456(ANSI C version is shown in the)
4.456 F(appendix.)72 717 Q EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-2-)279.67 48 S -1.11(Va)72 84 S 1.477
(rious versions of the `)1.11 F 3.977(`Hello, W)-.74 F(orld')-.8 E 3.977('k)
-.74 G 1.477(oan for V)249.102 84 R 1.477(ersion 1)-1.11 F 3.977(1o)-.37 G
3.977(ft)336.29 84 S 1.477(he X W)346.377 84 R 1.477(indow System)-.4 F/F1 8
/Times-Roman@0 SF(*)438.458 80 Q F0 1.476(are examined.)446.434 84 R .992
(They provide a guide to writing correct programs for X1)72 96 R .992
(1, insight into the complexity of the issues they)-.37 F
(have to deal with, and an illustration of the importance of toolkits in X1)72
108 Q 2.5(1p)-.37 G(rogramming.)371.33 108 Q/F2 10/Times-Bold@0 SF 2.5
(2. Speci\214cation)72 132 R F0 .272(The `)72 147.6 R 2.772(`Hello, W)-.74 F
(orld')-.8 E 2.772('p)-.74 G .272
(roblem needs to be restated slightly for the world of window systems.)164.676
147.6 R .271(The program)5.271 F(needs to:)72 159.6 Q 11.5<8343>72 175.2 S
(reate a window of an appropriate size,)93.67 175.2 Q
(and position it on the screen if required.)5 E 11.5<8350>72 190.8 S
(aint the string `)92.56 190.8 Q 2.5(`Hello, W)-.74 F(orld')-.8 E 2.5('i)-.74 G
2.5(nas)221.65 190.8 S(uitable font,)239.98 190.8 Q(centered in the window)5 E
(.)-.65 E 11.5<8350>72 206.4 S 1.219(aint the string in a color which will con\
trast with the window background \255 it is not acceptable to)92.56 206.4 R
(paint an invisible string.)87 218.4 Q 11.5<8344>72 234 S
(eal with its window being exposed \255 repainting the window if required.)
94.22 234 Q 11.5<8344>72 249.6 S
(eal with its window being resized \255 re-centering the text.)94.22 249.6 Q
11.5<8344>72 265.2 S .396(eal with its window being closed into an icon,)94.22
265.2 R .395(and re-opened, providing suitable identi\214cation of the)5.395 F
(icon.)87 277.2 Q .549
(Note that this speci\214cation is much more complex than the canonical `)72
292.8 R 3.049(`Hello, W)-.74 F(orld')-.8 E 3.049('p)-.74 G 3.049(rogram, so)
431.523 292.8 R .549(that it)3.049 F
(is likely that the resulting programs will be signi\214cantly more complex.)72
304.8 Q F2 2.5(3. V)72 328.8 R(anilla X1)-.92 E(1)-.55 E F0(The \214rst `)72
344.4 Q 2.5(`Hello, W)-.74 F(orld')-.8 E 2.5('e)-.74 G
(xample uses only the facilities of the basic X1)181.36 344.4 Q 2.5(1l)-.37 G
(ibrary)375.69 344.4 Q(.)-.65 E F2 2.5(3.1. Pr)72 368.4 R(ogram Outline)-.18 E
F0 11.5<834f>72 384 S(pen a connection to the X server)94.22 384 Q 5(.E)-.55 G
(xit gracefully if you cannot.)236.69 384 Q 11.5<834f>72 399.6 S
(pen the font to be used,)94.22 399.6 Q
(and obtain the font data to allow string widths and heights to be calculated.)
5 E 11.5<8353>72 415.2 S .998(elect pixel values for the window border)92.56
415.2 R 5.998(,t)-.4 G .998(he window background,)271.056 415.2 R .998
(and the foreground that will be)5.998 F(used to paint the characters.)87 427.2
Q 11.5<8343>72 442.8 S .408(ompute the size and location of the window based o\
n the text string and the font data,)93.67 442.8 R .408(and set up the)5.408 F
(size hints structure.)87 454.8 Q 11.5<8343>72 470.4 S(reate the window)93.67
470.4 Q(.)-.65 E 11.5<8353>72 486 S
(et up the standard properties for use by the window manager)92.56 486 Q(.)-.55
E 11.5<8343>72 501.6 S
(reate a Graphics Context for use when painting the string.)93.67 501.6 Q 11.5
<8353>72 517.2 S
(elect the types of input events that we are interested in receiving.)92.56
517.2 Q 11.5<834d>72 532.8 S(ap the window to make it visible.)95.89 532.8 Q
11.5<834c>72 548.4 S(oop forever:)93.11 548.4 Q 11.5<834f>87 564 S
(btain the next event.)109.22 564 Q 11.5<8349>87 579.6 S 3.558(ft)105.33 579.6
S 1.058
(he event is the last event of a group of Expose events \(that is, it has)
114.998 579.6 R F2(count == 0)3.558 E F0 3.557(\), repaint)B(the)3.557 E
(window by:)102 591.6 Q 11.5<8344>102 607.2 S
(iscovering the current size of the window)124.22 607.2 Q(.)-.65 E 11.5<8343>
102 622.8 S .31(omputing the position for the start of the string that will ca\
use it to appear centered in the cur)123.67 622.8 R(-)-.2 E(rent window)117
634.8 Q(.)-.65 E 11.5<8343>102 650.4 S
(learing the window to the background color)123.67 650.4 Q(.)-.55 E 11.5<8344>
102 666 S(rawing the string.)124.22 666 Q .32 LW 76 698 72 698 DL 80 698 76 698
DL 84 698 80 698 DL 88 698 84 698 DL 92 698 88 698 DL 96 698 92 698 DL 100 698
96 698 DL 104 698 100 698 DL 108 698 104 698 DL 112 698 108 698 DL 116 698 112
698 DL 120 698 116 698 DL 124 698 120 698 DL 128 698 124 698 DL 132 698 128 698
DL 136 698 132 698 DL 140 698 136 698 DL 144 698 140 698 DL F1(The X W)72 708 Q
(indow System is a trademark of the Massachusetts Institute of T)-.32 E
(echnology)-.56 E(.)-.52 E EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-3-)279.67 48 S/F1 10/Times-Bold@0 SF 2.5(3.2. Pr)
72 84 R(ogram T)-.18 E(ext)-.92 E/F2 6/Times-Roman@0 SF(#include <stdio.h>)108
99.6 Q(#include <X1)108 105.6 Q(1/Xlib.h>)-.222 E(#include <X1)108 111.6 Q
(1/Xutil.h>)-.222 E(#de\214ne STRING)108 123.6 Q("Hello, world")2.37 E
(#de\214ne BORDER)108 129.6 Q(1)194.4 129.6 Q(#de\214ne FONT)108 135.6 Q
("\214xed")8.37 E(/*)108 147.6 Q 1.5(*T)109.5 153.6 S
(his structure forms the WM_HINTS property of the window)-1.5 E(,)-.39 E 1.5
(*l)109.5 159.6 S(etting the window manager know how to handle this window)-1.5
E(.)-.39 E 1.5(*S)109.5 165.6 S(ee Section 9.1 of the Xlib manual.)-1.5 E(*/)
109.5 171.6 Q 13.368(XWMHints xwmh)108 177.6 R 1.5(={)1.5 G 26.202
(\(InputHint|StateHint\), /*)114 183.6 R(\215ags */)1.5 E 107.934(False, /*)114
189.6 R(input */)1.5 E 47.07(NormalState, /*)114 195.6 R(initial_state */)1.5 E
160.8(0, /*)114 201.6 R(icon pixmap */)1.5 E 160.8(0, /*)114 207.6 R
(icon window */)1.5 E(0, 0,)114 213.6 Q(/* icon location */)237.6 213.6 Q 160.8
(0, /*)114 219.6 R(icon mask */)1.5 E 160.8(0, /*)114 225.6 R -.24(Wi)1.5 G
(ndow group */).24 E(};)108 231.6 Q(main\(ar)108 243.6 Q(gc,ar)-.108 E(gv\))
-.108 E(int ar)114 249.6 Q(gc;)-.108 E(char **ar)114 255.6 Q(gv;)-.108 E({)108
261.6 Q 4.5(Display *dpy;)114 267.6 R(/* X server connection */)237.6 267.6 Q
-.24(Wi)114 273.6 S 7.5(ndow win;).24 F(/* W)237.6 273.6 Q(indow ID */)-.24 E
13.5(GC gc;)114 279.6 R(/* GC to draw with */)194.4 279.6 Q
(XFontStruct *fontstruct;)114 285.6 Q(/* Font descriptor */)194.4 285.6 Q
(unsigned long fth, pad;)114 291.6 Q(/* Font size parameters */)194.4 291.6 Q
(unsigned long fg, bg, bd;)114 297.6 Q(/* Pixel values */)194.4 297.6 Q
(unsigned long bw;)114 303.6 Q(/* Border width */)237.6 303.6 Q(XGCV)114 309.6
Q 3(alues gcv;)-.666 F(/* Struct for creating GC */)237.6 309.6 Q 7.5
(XEvent event;)114 315.6 R(/* Event received */)237.6 315.6 Q 1.5
(XSizeHints xsh;)114 321.6 R(/* Size hints for window manager */)237.6 321.6 Q
9(char *geomSpec;)114 327.6 R(/* W)194.4 327.6 Q(indow geometry string */)-.24
E(XSetW)114 333.6 Q(indowAttributes xswa;)-.24 E(/* T)8.478 E(emporary Set W)
-.42 E(indow Attribute struct */)-.24 E(/*)114 345.6 Q 1.5(*O)115.5 351.6 S
(pen the display using the $DISPLA)-1.5 E 1.5(Ye)-.552 G
(nvironment variable to locate)-1.5 E 1.5(*t)115.5 357.6 S(he X server)-1.5 E 3
(.S)-.33 G(ee Section 2.1.)156.828 357.6 Q(*/)115.5 363.6 Q
(if \(\(dpy = XOpenDisplay\(NULL\)\) == NULL\) {)114 369.6 Q(fprintf\(stderr)
151.2 375.6 Q 1.5(,")-.24 G(%s: can')-1.5 E 1.5(to)-.108 G(pen %s\\n", ar)-1.5
E(gv[0], XDisplayName\(NULL\)\);)-.108 E(exit\(1\);)151.2 381.6 Q(})114 387.6 Q
(/*)114 399.6 Q 1.5(*L)115.5 405.6 S(oad the font to use.)-1.5 E
(See Sections 10.2 & 6.5.1)3 E(*/)115.5 411.6 Q
(if \(\(fontstruct = XLoadQueryFont\(dpy)114 417.6 Q 1.5(,F)-.39 G
(ONT\)\) == NULL\) {)-1.5 E(fprintf\(stderr)151.2 423.6 Q 1.5(,")-.24 G
(%s: display %s doesn')-1.5 E 1.5(tk)-.108 G(now font %s\\n",)-1.5 E(ar)194.4
429.6 Q(gv[0], DisplayString\(dpy\), FONT\);)-.108 E(exit\(1\);)151.2 435.6 Q
(})114 441.6 Q
(fth = fontstruct->max_bounds.ascent + fontstruct->max_bounds.descent;)114
447.6 Q(/*)114 459.6 Q 1.5(*S)115.5 465.6 S(elect colors for the border)-1.5 E
3(,t)-.24 G(he window background,)191.244 465.6 Q(and the)3 E 1.5(*f)115.5
471.6 S(oreground.)-1.5 E(*/)115.5 477.6 Q(bd = WhitePixel\(dpy)114 483.6 Q 1.5
(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E(bg = BlackPixel\(dpy)114 489.6 Q 1.5
(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E(fg = WhitePixel\(dpy)114 495.6 Q 1.5
(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E(/*)114 507.6 Q 1.5(*S)115.5 513.6 S
(et the border width of the window)-1.5 E 3(,a)-.39 G
(nd the gap between the text)211.764 513.6 Q 1.5(*a)115.5 519.6 S
(nd the edge of the window)-1.5 E 1.5(,")-.39 G(pad".)-1.5 E(*/)115.5 525.6 Q
(pad = BORDER;)114 531.6 Q(bw = 1;)114 537.6 Q(/*)114 549.6 Q 1.5(*D)115.5
555.6 S(eal with providing the window with an initial position & size.)-1.5 E
1.5(*F)115.5 561.6 S
(ill out the XSizeHints struct to inform the window manager)-1.5 E 1.5(.S)-.33
G(ee)-1.5 E 1.5(*S)115.5 567.6 S(ections 9.1.6 & 10.3.)-1.5 E(*/)115.5 573.6 Q
(xsh.\215ags = \(PPosition | PSize\);)114 579.6 Q(xsh.height = fth + pad * 2;)
114 585.6 Q(xsh.width = XT)114 591.6 Q(extW)-.42 E
(idth\(fontstruct, STRING, strlen\(STRING\)\) + pad * 2;)-.24 E
(xsh.x = \(DisplayW)114 597.6 Q(idth\(dpy)-.24 E 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.width\) / 2;)-1.5 E(xsh.y = \(DisplayHeight\(dpy)
114 603.6 Q 1.5(,D)-.39 G(efaultScreen\(dpy\)\) - xsh.height\) / 2;)-1.5 E(/*)
114 615.6 Q 1.5(*C)115.5 621.6 S(reate the W)-1.5 E
(indow with the information in the XSizeHints, the)-.24 E 1.5(*b)115.5 627.6 S
(order width,)-1.5 E(and the border & background pixels. See Section 3.3.)3 E
(*/)115.5 633.6 Q(win = XCreateSimpleW)114 639.6 Q(indow\(dpy)-.24 E 1.5(,D)
-.39 G(efaultRootW)-1.5 E(indow\(dpy\),)-.24 E(xsh.x, xsh.y)246.6 645.6 Q 1.5
(,x)-.39 G(sh.width, xsh.height,)-1.5 E(bw)246.6 651.6 Q 1.5(,b)-.39 G
(d, bg\);)-1.5 E(/*)114 663.6 Q 1.5(*S)115.5 669.6 S
(et the standard properties for the window managers. See Section)-1.5 E 1.5(*9)
115.5 675.6 S(.1.)-1.5 E(*/)115.5 681.6 Q(XSetStandardProperties\(dpy)114 687.6
Q 1.5(,w)-.39 G(in, STRING, STRING, None, ar)-1.5 E(gv)-.108 E 1.5(,a)-.39 G
-.108(rg)-1.5 G(c, &xsh\);).108 E(XSetWMHints\(dpy)114 693.6 Q 1.5(,w)-.39 G
(in, &xwmh\);)-1.5 E(/*)114 705.6 Q 1.5(*E)115.5 711.6 S
(nsure that the window')-1.5 E 1.5(sc)-.33 G
(olormap \214eld points to the default)-1.5 E 1.5(*c)115.5 717.6 S 1.5
(olormap, so)-1.5 F(that the window manager knows the correct colormap to)1.5 E
1.5(*u)115.5 723.6 S(se for the window)-1.5 E 3(.S)-.39 G
(ee Section 3.2.9. Also,)173.604 723.6 Q(set the window')3 E 1.5(sB)-.33 G(it)
-1.5 E EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 6/Times-Roman@0 SF 1.5(-4-)283.002 42 S 1.5(*G)115.5 78 S
(ravity to reduce Expose events.)-1.5 E(*/)115.5 84 Q
(xswa.colormap = DefaultColormap\(dpy)114 90 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\);)-1.5 E(xswa.bit_gravity = CenterGravity;)114 96 Q
(XChangeW)114 102 Q(indowAttributes\(dpy)-.24 E 1.5(,w)-.39 G
(in, \(CWColormap | CWBitGravity\), &xswa\);)-1.5 E(/*)114 114 Q 1.5(*C)115.5
120 S(reate the GC for writing the text.)-1.5 E(See Section 5.3.)3 E(*/)115.5
126 Q(gcv)114 132 Q(.font = fontstruct->\214d;)-.39 E(gcv)114 138 Q
(.foreground = fg;)-.39 E(gcv)114 144 Q(.background = bg;)-.39 E
(gc = XCreateGC\(dpy)114 150 Q 1.5(,w)-.39 G
(in, \(GCFont | GCForeground | GCBackground\), &gcv\);)-1.5 E(/*)114 162 Q 1.5
(*S)115.5 168 S(pecify the event types we're interested in - only Exposures.)
-1.5 E(See)3 E 1.5(*S)115.5 174 S(ections 8.5 & 8.4.5.1)-1.5 E(*/)115.5 180 Q
(XSelectInput\(dpy)114 186 Q 1.5(,w)-.39 G(in, ExposureMask\);)-1.5 E(/*)114
198 Q 1.5(*M)115.5 204 S(ap the window to make it visible.)-1.5 E
(See Section 3.5.)3 E(*/)115.5 210 Q(XMapW)114 216 Q(indow\(dpy)-.24 E 1.5(,w)
-.39 G(in\);)-1.5 E(/*)114 228 Q 1.5(*L)115.5 234 S(oop forever)-1.5 E 3(,e)
-.24 G(xamining each event.)158.412 234 Q(*/)115.5 240 Q(while \(1\) {)114 246
Q(/*)151.2 252 Q 1.5(*G)152.7 258 S(et the next event)-1.5 E(*/)152.7 264 Q
(XNextEvent\(dpy)151.2 270 Q 1.5(,&)-.39 G(event\);)-1.5 E(/*)151.2 282 Q 1.5
(*O)152.7 288 S 1.5(nt)-1.5 G(he last of each group of Expose events,)-1.5 E
(repaint the entire)3 E 1.5(*w)152.7 294 S(indow)-1.5 E 3(.S)-.39 G
(ee Section 8.4.5.1.)183.978 294 Q(*/)152.7 300 Q
(if \(event.type == Expose && event.xexpose.count == 0\) {)151.2 306 Q(XW)157.2
312 Q(indowAttributes xwa;)-.24 E(/* T)237.6 312 Q(emp Get W)-.42 E
(indow Attribute struct */)-.24 E 12(int x,)157.2 318 R(y;)1.5 E(/*)157.2 330 Q
1.5(*R)158.7 336 S(emove any other pending Expose events from the queue to)-1.5
E 1.5(*a)158.7 342 S(void multiple repaints. See Section 8.7.)-1.5 E(*/)158.7
348 Q(while \(XCheckT)157.2 354 Q(ypedEvent\(dpy)-.42 E 1.5(,E)-.39 G
(xpose, &event\)\);)-1.5 E(/*)157.2 366 Q 1.5(*F)158.7 372 S
(ind out how big the window is now)-1.5 E 3(,s)-.39 G 1.5(ot)257.814 372 S
(hat we can center)-1.5 E 1.5(*t)158.7 378 S(he text in it.)-1.5 E(*/)158.7 384
Q(if \(XGetW)157.2 390 Q(indowAttributes\(dpy)-.24 E 1.5(,w)-.39 G
(in, &xwa\) == 0\))-1.5 E(break;)194.4 396 Q 1.5(x=\()157.2 402 S
(xwa.width - XT)-1.5 E(extW)-.42 E
(idth\(fontstruct, STRING, strlen\(STRING\)\)\) / 2;)-.24 E 1.5(y=\()157.2 408
S(xwa.height + fontstruct->max_bounds.ascent)-1.5 E 1.5(-f)195.9 414 S
(ontstruct->max_bounds.descent\) / 2;)-1.5 E(/*)157.2 426 Q 1.5(*F)158.7 432 S
(ill the window with the background color)-1.5 E 3(,a)-.24 G(nd then paint)
272.784 432 Q 1.5(*t)158.7 438 S(he centered string.)-1.5 E(*/)158.7 444 Q
(XClearW)157.2 450 Q(indow\(dpy)-.24 E 1.5(,w)-.39 G(in\);)-1.5 E
(XDrawString\(dpy)157.2 456 Q 1.5(,w)-.39 G(in, gc, x, y)-1.5 E 1.5(,S)-.39 G
(TRING, strlen\(STRING\)\);)-1.5 E(})151.2 462 Q(})114 468 Q(exit\(1\);)114 480
Q(})108 486 Q/F1 10/Times-Bold@0 SF 2.5(3.3. Does)72 522 R
(it meet the speci\214cation?)2.5 E/F2 10/Times-Roman@0 SF 11.5<8349>72 537.6 S
3.589(tc)90.33 537.6 S 1.088(omputes the size of the window from the string an\
d the font, and positions it at the center of the)101.139 537.6 R(screen.)87
549.6 Q 11.5<8349>72 565.2 S 2.871(tp)90.33 565.2 S .371
(aints the string in the color)100.981 565.2 R F1 -.834(WhitePixel\( \))2.872 F
F2 .372(on a)2.872 F F1 -.834(BlackPixel\( \))2.872 F F2 2.872(background. It)
2.872 F .372(ensures that the appro-)2.872 F .059
(priate colormap will be used for the window)87 577.2 R 5.058(,s)-.65 G 2.558
(ot)275.68 577.2 S .058(hat these colors \(which may not actually be White and)
286.018 577.2 R(Black\) will be distinguishable.)87 589.2 Q 11.5<8345>72 604.8
S .524(very time it gets the last of a group of Expose events,)93.11 604.8 R
.524(it enquires the size of the window)5.524 F 5.524(,a)-.65 G .524(nd paints)
467.086 604.8 R .292(the string centered in this space.)87 616.8 R .292
(In particular)5.292 F 5.292(,i)-.4 G 2.792(tw)281.676 616.8 S .291
(ill get an Expose event initially as a consequence of)294.468 616.8 R
(its mapping the window)87 628.8 Q 5(,a)-.65 G
(nd will thus paint the window for the \214rst time.)194.68 628.8 Q 11.5<8354>
72 644.4 S .754
(he same mechanism copes with part or all of the window being exposed.)93.11
644.4 R .755(The program will re-paint)5.755 F .341
(the entire window when any part is exposed; in this case the ef)87 656.4 R
.341(fort of only repainting the exposed parts)-.18 F(is excessive.)87 668.4 Q
11.5<8354>72 684 S .858(he fact that the string is re-centered every time the \
window is painted means that the program deals)93.11 684 R .966
(with re-sizing correctly)87 696 R 5.966(.S)-.65 G .966
(ubject to the caveats below)195.618 696 R 3.466(,w)-.65 G .966
(hen the window is resized,)320.328 696 R .966(an Expose event)5.966 F
(will be generated, and the window will be re-painted.)87 708 Q EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-5-)279.67 48 S 11.5<8354>72 84 S .338(he standard\
 properties that the program sets include a speci\214cation of a string that a\
 window manager)93.11 84 R .545(can display in the icon.)87 96 R .545
(The programs sets this to be the string it is displaying,)5.545 F .545
(so it copes with being)5.545 F 2.5(iconi\214ed. When)87 108 R(it is opened,)
2.5 E(an Expose event will be generated, and the window will be re-painted.)5 E
/F1 10/Times-Bold@0 SF 2.5(3.4. Design)72 132 R(Issues)2.5 E F0 .78
(Although this implementation of `)72 147.6 R 3.28(`Hello, W)-.74 F(orld')-.8 E
3.28('i)-.74 G 3.28(sa)281.61 147.6 S .78(larmingly long,)293.22 147.6 R .78
(it is structurally simple.)5.78 F(Neverthe-)5.78 E 2.78(less, there)72 159.6 R
.28(are many detailed design issues that arise when writing it.)2.78 F .28
(This section covers them,)5.28 F .28(in no par)5.28 F(-)-.2 E(ticular order)72
171.6 Q(.)-.55 E F1 2.5(3.4.1. Repaint)72 195.6 R(Strategy)2.5 E(.)-.55 E F0
.291(Every X1)72 211.2 R 2.791(1a)-.37 G .291(pplication has the responsibilit\
y for re-painting its image whenever the server requests it to.)122.752 211.2 R
(It)5.292 E .149(is possible to refresh only the parts requested,)72 223.2 R
.148(or to refresh the entire window)5.148 F 5.148(.T)-.65 G .148(he `)398.366
223.2 R 2.648(`Hello, W)-.74 F(orld')-.8 E 2.648('i)-.74 G(mage)482.34 223.2 Q
(is simple enough that refreshing the entire image is a sensible approach.)72
235.2 Q .301(Exposing part or all the window results in the server painting th\
e exposed areas in the window background)72 250.8 R(color)72 262.8 Q 2.953(,a)
-.4 G .452(nd one or more Expose events.)102.043 262.8 R .452(Each carries,)
5.452 F .452(in the)5.452 F F1(count)2.952 E F0 2.952(\214eld, the)2.952 F .452
(number of events in the same)2.952 F .635(group that follow it.)72 274.8 R
.635(After receiving the last of each group,)5.635 F .635
(identi\214ed by a zero)5.635 F F1(count)3.136 E F0 3.136(,t)C .636
(he window is re-)435.162 274.8 R(painted.)72 286.8 Q .148(Re-painting on)72
302.4 R/F2 10/Times-Italic@0 SF(every)2.648 E F0 .148
(Expose event would result in unnecessary multiple repaints.)2.648 F .148
(For example,)5.148 F .147(consider a)5.147 F -.74(``)72 314.4 S 3.646
(Hello, W).74 F(orld')-.8 E 3.646('t)-.74 G 1.147
(hat appears for the \214rst time with one corner overlain by another window)
145.882 314.4 R 6.147(.T)-.65 G 1.147(he newly)466.473 314.4 R
(exposed area consists of two rectangles,)72 326.4 Q
(so there will be two Expose events in the initial group.)5 E 1.954 -.8(We a)72
342 T .354
(ctually take even more rigorous measures to avoid multiple repaints.).8 F .353
(Every time we decide to repaint)5.354 F 1.108(the window)72 354 R 6.108(,w)
-.65 G 3.609(es)135.226 354 S 1.109(can the event queue and remove all Expose \
events that have arrived at the client,)147.165 354 R(but)6.109 E
(which have yet to arrive at the head of the queue.)72 366 Q F1 2.5
(3.4.2. Resize)72 390 R(Strategy)2.5 E F0 .726
(The \214rst time the window is painted,)72 405.6 R .725
(it seems as if enquiring the size of the window is unnecessary)5.725 F 5.725
(.W)-.65 G(e)499.56 405.6 Q 3.025(have, after)72 417.6 R 3.025(all, just)3.025
F .525(created the window and told it what size to be.)3.025 F .525(But X1)
5.525 F 3.025(1d)-.37 G .526(oes not allow us to assume)394.43 417.6 R .345
(that the window will actually get created at the requested size;)72 429.6 R
.344(we have to be prepared for a window man-)5.345 F .154
(ager to have intervened and overridden our choice of size.)72 441.6 R .154
(So it is necessary to enquire the window size on)5.154 F
(the initial Expose event.)72 453.6 Q .304(When the window is resized,)72 469.2
R .303(the client needs to re-compute the centering of the text.)5.303 F .303
(The implementation)5.303 F
(does this on the last of every group of Expose events.)72 481.2 Q
(This raises two questions)5 E 11.5<8344>72 496.8 S
(oes every resize of the window result in at least one Expose event?)94.22
496.8 Q .099(Consider a window)87 512.4 R 5.099(,n)-.65 G .099
(ot obscured by others,)176.917 512.4 R .099
(that is resized to make it smaller)5.099 F 5.1(.T)-.55 G .1(he X1)413.82 512.4
R 2.6(1s)-.37 G .1(erver actually)449.2 512.4 R .752
(has enough pixels to \214ll the new window size;)87 524.4 R .752
(there is no need to generate an Expose event to cause)5.752 F .434
(pixels to be repainted.)87 536.4 R .434
(This is the simplest example of what the X1)5.434 F 2.935(1s)-.37 G .435
(peci\214cation calls `)373.085 536.4 R .435(`Bit Gravity')-.74 F('.)-.74 E
.256(Clients may reduce the number of Expose events they receive by specifying\
 an appropriate Bit Gravity)87 548.4 R(.)-.65 E .243
(Even if the window is made lar)87 560.4 R(ger)-.18 E 5.243(,t)-.4 G .244
(he Bit Gravity can tell the server how to re-locate the old pixels in)236.151
560.4 R 1.019(the new window to avoid Expose events on parts of the window who\
se contents are not supposed to)87 572.4 R(change.)87 584.4 Q 1.734
(By default,)87 600 R(X1)6.734 E 4.234(1s)-.37 G 1.735
(ets the Bit Gravity of windows to)164.882 600 R F1(ForgetGravity)4.235 E F0
6.735(.T)C 1.735(his ensures that the gravity)389.85 600 R .574
(mechanism is disabled,)87 612 R .574
(Expose events occur on all resizings of the window)5.574 F 5.574(,a)-.65 G
.574(nd the `)408.748 612 R 3.074(`Hello, W)-.74 F(orld')-.8 E(')-.74 E .139
(program operates correctly if the whole issue of Bit Gravity is ignored.)87
624 R .139(In this default case,)5.139 F .139(the answer)5.139 F
(to the question is `)87 636 Q(`Y)-.74 E 2.5(es, every)-1 F
(resize results in at least one Expose event')2.5 E('.)-.74 E .301
(But we can exploit Bit Gravity to avoid unnecessary repaints by setting it to)
87 651.6 R F1(CenterGravity)2.8 E F0 5.3(.T)C .3(his will)473.97 651.6 R .216(\
preserve the centering of the text if the window is resized smaller without in\
volving the client program.)87 663.6 R .757(In this case,)87 675.6 R .757
(the answer to the question is `)5.757 F 3.257(`No, not)-.74 F .757
(every resize results in an Expose event')3.257 F 3.256('. But)-.74 F(in)3.256
E(the cases where no Expose event occurs, the window will still be correct.)87
687.6 Q 11.5<8343>72 703.2 S
(an we avoid the overhead of enquiring the window size on every re-paint?)93.67
703.2 Q .605(As we have seen,)87 718.8 R .605
(Expose events have no direct relation to window re-sizing.)5.605 F .605
(In general,)5.605 F(X1)5.605 E 3.105(1c)-.37 G(lients)482.33 718.8 Q
(should listen for both:)87 730.8 Q EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-6-)279.67 48 S 11.5<8345>87 84 S(xpose events,)
108.11 84 Q(which tell them to re-paint some part of the window)5 E(.)-.65 E
11.5<8343>87 99.6 S 1.298(on\214gureNotify events,)108.67 99.6 R 1.297
(which tell them that the window has been changed in some way which)6.298 F
.537(requires that the image be re-computed.)102 111.6 R .538
(These carry the new size of the window)5.537 F 5.538(,t)-.65 G .538
(here is no need)442.126 111.6 R(for an explicit enquiry)102 123.6 Q(.)-.65 E
.689(In principle,)87 139.2 R -.74(``)5.689 G 3.188(Hello, W).74 F(orld')-.8 E
3.188('s)-.74 G .688
(hould only re-compute the centering of the text when it gets a Con\214g-)
216.334 139.2 R .517(ureNotify event.)87 151.2 R .517(But the overhead of the \
extra round-trip to the server to enquire about the size of the)5.517 F 1.102
(window on every Expose event is not critical for this application,)87 163.2 R
1.101(and the code in this case is much)6.102 F(simpler)87 175.2 Q(.)-.55 E/F1
10/Times-Bold@0 SF 2.5(3.4.3. Communicating)72 199.2 R(with the W)2.5 E
(indow Manager)-.18 E F0(Every X application must use some properties on its w\
indow to communicate with the window manager)72 214.8 Q(.)-.55 E 11.5<8354>72
230.4 S .414(he WM hints,)93.11 230.4 R .415(containing information for the wi\
ndow manager about the input and icon behaviour of)5.414 F 1.34(the window)87
242.4 R 6.34(.I)-.65 G 3.84(nt)146.8 242.4 S 1.34(he case of `)158.42 242.4 R
3.84(`Hello, W)-.74 F(orld')-.8 E 1.339
(', this information is known at compile time and can be)-.74 F
(intialized statically)87 254.4 Q(.)-.65 E 11.5<8354>72 270 S .272
(he size hints,)93.11 270 R .272
(containing information about the size and position of the window)5.272 F 5.273
(.T)-.65 G .273(hese cannot be ini-)427.921 270 R
(tialized statically since they depend on the font properties,)87 282 Q
(and are only known at run-time.)5 E 11.5<834f>72 297.6 S .85(ther properties,)
94.22 297.6 R(including)5.85 E F1(WM_NAME)3.35 E F0(,)A F1(WM_ICON_NAME)5.85 E
F0 3.35(,a)C(nd)362.32 297.6 Q F1(WM_COMMAND)3.35 E F0 5.85(,w)C .85(hich are)
471.22 297.6 R(used to communicate strings such as the name of the program run\
ning behind the window)87 309.6 Q(.)-.65 E 11.5<8354>72 325.2 S .653
(he colormap \214eld of the window is not a property)93.11 325.2 R 5.653(,b)
-.65 G .653(ut it may also be used to communicate with the)309.52 325.2 R .138
(window manager)87 337.2 R 5.137(.T)-.55 G .137
(he conventions about this have yet to be fully speci\214ed,)169.485 337.2 R
.137(and the topic is covered in)5.137 F(the next section.)87 349.2 Q F1 2.5
(3.4.4. Pixel)72 373.2 R -.92(Va)2.5 G(lues and Colormaps).92 E F0 2.462 -.7
(To e)72 388.8 T 1.062(nsure `).7 F 3.562(`Hello, W)-.74 F(orld')-.8 E 3.562
('w)-.74 G 1.063
(orks on both monochrome and color displays, we use the colors Black and)
193.788 388.8 R(White)72 400.8 Q/F2 8/Times-Roman@0 SF(3)96.44 396.8 Q F0 5.977
(.T)100.44 400.8 S 3.477(op)114.327 400.8 S .977(aint in a color using X1)
127.804 400.8 R 3.476(1, you)-.37 F .976
(need to know the pixel value corresponding to it;)3.476 F .976(the pixel)5.976
F(value is the number you write into the pixel to cause that color to show on \
the screen.)72 412.8 Q .192(Although X1)72 428.4 R 2.693(1s)-.37 G .193(peci\
\214es that Graphics Contexts are by default created using 0 and 1 for the bac\
kground and)135.905 428.4 R .633(foreground pixel values, an application canno\
t predict the colors that these pixel values will resolve to.)72 440.4 R(It)
5.632 E .05(cannot even predict that these two colors will be dif)72 452.4 R
2.55(ferent, so)-.18 F .05(every application must explicitly set the pixel)2.55
F(values it will use.)72 464.4 Q .385
(Pixel values are determined relative to a Colormap;)72 480 R(X1)5.385 E 2.885
(1s)-.37 G .384(upports an arbitrary number of colormaps,)309.505 480 R(with)
5.384 E 1.892(one or more being installed in the hardware at any one time.)72
492 R(X1)6.892 E 4.392(1s)-.37 G 1.892(upports these colormaps even on)365.342
492 R 1.19(monochrome displays.)72 504 R 1.19(There is a default colormap,)6.19
F 1.19(which applications with modest color requirements)6.19 F .116(are ur)72
516 R .116(ged to use,)-.18 F .116(and `)5.116 F 2.616(`Hello, W)-.74 F(orld')
-.8 E 2.616('i)-.74 G 2.616(sa)232.252 516 S 2.616(sm)243.198 516 S .116
(odest as you could wish.)257.484 516 R .116(In fact,)5.116 F .116
(the colors Black and White)5.116 F
(have pre-de\214ned pixel values in the default colormap,)72 528 Q
(and we can use these directly)5 E(.)-.65 E(However)72 543.6 Q 6.799(,u)-.4 G
1.799(sing the pre-de\214ned values means that `)122.549 543.6 R 4.298
(`Hello, W)-.74 F(orld')-.8 E 4.298('b)-.74 G 1.798
(ecomes dependent on having the)366.278 543.6 R .509
(default colormap installed.)72 555.6 R .509(Unless it is,)5.509 F .509
(they may not be distinguishable.)5.509 F(Unfortunately)5.51 E 5.51(,w)-.65 G
.51(hen a window)446.88 555.6 R .255(is created using)72 567.6 R F1(XCr)2.755 E
(eateSimpleW)-.18 E -.834(indow\( \))-.18 F F0 .255
(the colormap is inherited from the parent \(in our case,)2.755 F .254
(the root)5.255 F .242(window for the default screen\),)72 579.6 R .242
(and it is possible that some client may have set the colormap of the root to)
5.242 F .336(something other than the default colormap.)72 591.6 R 2.836
(So, for)5.336 F(now)2.836 E 5.336(,w)-.65 G 2.836(eh)315.734 591.6 S .335
(ave to set the colormap \214eld of the window)328.01 591.6 R .093
(explicitly to be the default colormap,)72 603.6 R .093
(although it is anticipated that when the conventions for window man-)5.093 F
(agement are \214nally determined this code will be unnecessary)72 615.6 Q(.)
-.65 E .398(Simply setting the colormap \214eld of the window does not ensure \
that the correct colormap will actually be)72 631.2 R 4.125(installed. The)72
643.2 R 1.625(whole question of whether)4.125 F 6.625(,a)-.4 G 1.625(nd when,)
259.1 643.2 R 1.626(clients should install their colormaps is open to)6.625 F
(debate at present.)72 655.2 Q(There are two basic positions:)5 E 11.5<8343>72
670.8 S .948
(lients should explicitly install their own colormap when appropriate,)93.67
670.8 R .947(for example when they obtain)5.948 F(the input focus.)87 682.8 Q
.32 LW 76 698 72 698 DL 80 698 76 698 DL 84 698 80 698 DL 88 698 84 698 DL 92
698 88 698 DL 96 698 92 698 DL 100 698 96 698 DL 104 698 100 698 DL 108 698 104
698 DL 112 698 108 698 DL 116 698 112 698 DL 120 698 116 698 DL 124 698 120 698
DL 128 698 124 698 DL 132 698 128 698 DL 136 698 132 698 DL 140 698 136 698 DL
144 698 140 698 DL F2 4(3T)72 708 S
(hese colors may not actually be black and white,)84.888 708 Q
(but they are guaranteed to contrast with each other)4 E(.)-.44 E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-7-)279.67 48 S .233(This has two disadvantages,)87
84 R .233(in that it makes every client much more complicated \(it means,)5.233
F .234(for exam-)5.234 F 2.896(ple, that)87 96 R -.74(``)2.896 G 2.896
(Hello, W).74 F(orld')-.8 E 2.896('h)-.74 G .396
(as to worry about the input focus!\),)199.614 96 R .395
(and that it means that every client will)5.395 F .272
(be doing the wrong thing eventually)87 108 R 5.273(,w)-.65 G .273
(hen window managers start doing the right thing \(whatever that)247.413 108 R
2.5(is!\). It)87 120 R 2.5(does, however)2.5 F 5(,m)-.4 G
(ean that clients will work right now)191.58 120 Q(.)-.65 E 11.5<8343>72 135.6
S 1.494(lients should never install their own colormaps,)93.67 135.6 R 1.493
(and should assume that some combination of the)6.494 F
(internals of the server)87 147.6 Q 5(,a)-.4 G(nd the window manager)185.46
147.6 Q 5(,w)-.4 G(ill do it for them.)296.15 147.6 Q .035
(This has the disadvantage that it will not work at present,)87 163.2 R .036
(since existing window managers don')5.036 F 2.536(ta)-.18 G(ppear)481.79 163.2
Q(to do anything with colormaps.)87 175.2 Q .996(Strictly speaking,)72 190.8 R
3.496(therfore, `)5.996 F 3.496(`Hello, W)-.74 F(orld')-.8 E 3.496('s)-.74 G
.995(hould deal with installing colormaps,)263.83 190.8 R .995
(since the policy has)5.995 F .32(yet to be determined.)72 202.8 R .321(But it\
 would make the code so complex as to be out of the question for a paper such)
5.321 F(as this.)72 214.8 Q/F1 10/Times-Bold@0 SF 2.5(3.4.5. Err)72 238.8 R
(or Handling)-.18 E F0 .182(It appears that this `)72 254.4 R 2.682(`Hello, W)
-.74 F(orld')-.8 E 2.682('i)-.74 G .182(mplementation follows the canonical `)
220.782 254.4 R 2.681(`Hello, W)-.74 F(orld')-.8 E 2.681('i)-.74 G
(mplementation)444 254.4 Q .325(in the great U)72 266.4 R/F2 8/Times-Roman@0 SF
(NIX)A F0 .326(tradition of optimism,)2.825 F .326
(by ignoring the possibility of errors.)5.326 F .326
(Not so, the question of error)5.326 F(handling has been fully considered:)72
278.4 Q 11.5<834f>72 294 S 2.5(nt)94.22 294 S(he)104.5 294 Q F1 -.834
(XOpenDisplay\( \))2.5 F F0 2.5(call, we)2.5 F(check for the error return,)2.5
E(and exit gracefully)5 E(.)-.65 E 11.5<8357>72 309.6 S .271
(hen opening the font,)96.44 309.6 R .27
(we cannot be sure that the server will map that name into a font.)5.271 F .27
(So we check)5.27 F(the error return,)87 321.6 Q(and exit gracefully)5 E 2.5
(,i)-.65 G 2.5(ft)237.14 321.6 S(he server objects to the name.)245.75 321.6 Q
11.5<8346>72 337.2 S .487(or all other errors,)92.56 337.2 R .488
(we depend on the default error handling mechanism.)5.487 F .488(When an X1)
5.488 F 2.988(1c)-.37 G .488(lient gets an)454.694 337.2 R .171
(Error event from the server)87 349.2 R 5.171(,t)-.4 G .171
(he library code invokes an error handler)206.585 349.2 R 5.17(.T)-.55 G .17
(he client is free to override the)380.79 349.2 R 2.038(default one,)87 361.2 R
2.038(which prints an informative message and exits,)7.038 F 2.038
(but its behaviour is \214ne for `)7.038 F(`Hello,)-.74 E -.8(Wo)87 373.2 S
(rld').8 E('.)-.74 E 1.355(Of course,)72 388.8 R 1.355
(one might ask why we need to explicitly check for errors on opening the font.)
6.355 F(Surely)6.355 E 6.355(,t)-.65 G(he)494.56 388.8 Q .734
(default error handler does what we want?)72 400.8 R .735
(It is an \(alas, undocumented\) feature of Xlib that not all errors)5.734 F
.419(cause the error handler to be invoked.)72 412.8 R .419(Some errors,)5.419
F .419(such as failure to open a font,)5.419 F .419(are regarded as failure)
5.419 F .141(status returns and are signalled by Status return values \255 in \
general any routine that returns Status will need)72 424.8 R
(its return tested,)72 436.8 Q
(because it will have bypassed the error handling mechanism.)5 E F1 2.5
(3.4.6. Finding)72 460.8 R 2.5(aS)2.5 G(erver)148.41 460.8 Q(.)-.92 E F0 .113
(The particular server to use is identi\214ed by the)72 476.4 R F1($DISPLA)
2.613 E(Y)-.92 E F0 .113(environment variable)2.613 F F2(4)397.553 472.4 Q F0
2.613(,s)401.553 476.4 S 2.613(oi)410.556 476.4 S 2.613(td)420.949 476.4 S .112
(oes not need to be)431.342 476.4 R .086(speci\214ed explicitly)72 488.4 R
5.086(.I)-.65 G 2.586(ti)158.182 488.4 S 2.586(sac)166.328 488.4 S .087
(onvention among X1)184.27 488.4 R 2.587(1c)-.37 G .087
(lients that a command-line ar)280.541 488.4 R .087(gument containing a colon)
-.18 F .426(is a speci\214cation of the server to use,)72 500.4 R .426
(but this version of `)5.426 F 2.926(`Hello, W)-.74 F(orld')-.8 E 2.926('d)-.74
G .426(oes not support the convention)379.526 500.4 R
(\(or any other command-line ar)72 512.4 Q(guments\).)-.18 E F1 2.5
(3.4.7. Looping)72 536.4 R(for events.)2.5 E F0
(It is natural to assume that you can write the event wait loop:)72 552 Q/F3 6
/Times-Roman@0 SF(while \(XNextEvent\(dpy)108 564 Q 1.5(,&)-.39 G(event\) {)
-1.5 E 1(......)114 570 S(})108 576 Q F0 .402(but this is not the case.)72
597.6 R F1 -.834(XNextEvent\( \))5.402 F F0 .402
(is de\214ned to be void; it only ever returns when there is an event to)2.902
F 3.955(return, and)72 609.6 R 1.455
(errors are handled through the error handling mechanism,)3.955 F 1.454
(rather than being indicated by a)6.455 F(return value.)72 621.6 Q
(So it is necessary to write the event loop:)5 E F3(while \(1\) {)108 633.6 Q
(XNextEvent\(dpy)114 639.6 Q 1.5(,&)-.39 G(event\);)-1.5 E 1(......)114 645.6 S
(})108 651.6 Q .32 LW 76 698 72 698 DL 80 698 76 698 DL 84 698 80 698 DL 88 698
84 698 DL 92 698 88 698 DL 96 698 92 698 DL 100 698 96 698 DL 104 698 100 698
DL 108 698 104 698 DL 112 698 108 698 DL 116 698 112 698 DL 120 698 116 698 DL
124 698 120 698 DL 128 698 124 698 DL 132 698 128 698 DL 136 698 132 698 DL 140
698 136 698 DL 144 698 140 698 DL F2 4(4N)72 708 S(on-U)85.776 708 Q F3(NIX)A
F2(systems will use some other technique.)2 E EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-8-)279.67 48 S/F1 10/Times-Bold@0 SF 2.5
(3.4.8. Centering)72 84 R(the T)2.5 E(ext)-.92 E F0 .162(There are a number of\
 ways to compute the size of the string, in order to center it in the window)72
99.6 R 5.162(.T)-.65 G .162(he most)472.448 99.6 R .289
(correct method is to use)72 111.6 R F1(XT)2.789 E -.834(extExtents\( \))-.92 F
F0 5.289(,w)C .289(hich computes not merely the width of the string,)252.781
111.6 R .289(but also the)5.289 F 1.339
(maximum and minimum Y valuse for the characters in the string.)72 123.6 R 1.34
(The example uses)6.34 F F1(XT)3.84 E(extW)-.92 E -.834(idth\( \))-.18 F F0(to)
3.84 E .716(compute the width of the string, and uses the maximum and minimum \
Y values over all characters in the)72 135.6 R 2.56(font. It)72 147.6 R .06
(is to some extent a matter of taste which looks better)2.56 F 5.06(,t)-.4 G
.06(he string `)325.41 147.6 R 2.56(`Hello, W)-.74 F(orld')-.8 E 2.56('h)-.74 G
.06(as no descenders)436.68 147.6 R(so the example will tend to locate it some\
what higher in the window than is visually correct.)72 159.6 Q F1 2.5(3.5. Pr)
72 183.6 R(otocol Usage)-.18 E F0 .269(Benchmarking X1)72 199.2 R 2.769(1a)-.37
G .269(pplications is an interesting problem.)157.708 199.2 R .268
(The performance as seen by the user is af)5.269 F(fected)-.18 E .085
(both by the client,)72 211.2 R .085(and by the server)5.085 F 5.085(.T)-.55 G
2.585(om)230.85 211.2 S .085
(easure the performance of clients independently of any server)246.215 211.2 R
5.085(,I)-.4 G 1.532(have instrumented the X1)72 223.2 R 4.032(1l)-.37 G 1.532
(ibrary to gather statistics on the usage of the protocol.)191.078 223.2 R
1.531(The results for the)6.531 F .478(vanilla X1)72 235.2 R 2.978(1`)-.37 G
2.978(`Hello, W)124.616 235.2 R(orld')-.8 E 2.978('p)-.74 G .479
(rogram are shown in T)196.792 235.2 R .479
(ables 1 \(aggregate statistics\) and 2 \(usage of individ-)-.7 F
(ual requests\).)72 247.2 Q .4 LW 368.89 257.7 207.11 257.7 DL -.7(Ta)212.11
267.2 S(ble 1: Aggregate Statistics - V).7 E(anilla)-1.11 E 368.89 271.7 207.11
271.7 DL 53.39(Statistic V)243.66 281.2 R(alue)-1.11 E 368.89 285.7 207.11
285.7 DL(number of writes)212.11 295.2 Q(4)348.165 295.2 Q(number of reads)
212.11 307.2 Q(12)343.165 307.2 Q(bytes written)212.11 319.2 Q(392)338.165
319.2 Q(bytes read)212.11 331.2 Q(1736)333.165 331.2 Q(number of requests)
212.11 343.2 Q(16)343.165 343.2 Q(number of errors)212.11 355.2 Q(0)348.165
355.2 Q(number of events)212.11 367.2 Q(1)348.165 367.2 Q(number of replies)
212.11 379.2 Q(3)348.165 379.2 Q 368.89 383.7 207.11 383.7 DL 368.89 257.7
368.89 383.7 DL 207.11 257.7 207.11 383.7 DL 365.97 395.7 210.03 395.7 DL -.7
(Ta)215.03 405.2 S(ble 2: Usage of Requests - V).7 E(anilla)-1.11 E 365.97
409.7 210.03 409.7 DL 49.635(Request Count)251.69 419.2 R 365.97 423.7 210.03
423.7 DL(CreateW)215.03 433.2 Q 68.1(indow 1)-.4 F(ChangeW)215.03 445.2 Q 23.65
(indowAttributes 2)-.4 F(GetW)215.03 457.2 Q 39.76(indowAttributes 1)-.4 F
(MapW)215.03 469.2 Q 75.87(indow 1)-.4 F 73.81(GetGeometry 1)215.03 481.2 R
63.25(ChangeProperty 5)215.03 493.2 R 88.24(OpenFont 1)215.03 505.2 R 84.91
(QueryFont 1)215.03 517.2 R 88.25(CreateGC 1)215.03 529.2 R 87.15(ClearArea 1)
215.03 541.2 R(PolyT)215.03 553.2 Q 87.27(ext8 1)-.7 F 365.97 557.7 210.03
557.7 DL 365.97 395.7 365.97 557.7 DL 210.03 395.7 210.03 557.7 DL .023
(In interpreting these tables,)72 574.8 R .022(the important thing to remember\
 is that a round-trip to the server \(a request that)5.023 F .176
(needs a reply\) is relatively expensive.)72 586.8 R .176(For example,)5.176 F
.176(the `)5.176 F(`replies')-.74 E 2.676('e)-.74 G .176(ntry in T)347.21 586.8
R .176(able 1 shows that there were 3)-.7 F 1.106(round-trips, and in T)72
598.8 R 1.106(able 2 they can be identi\214ed as being the GetW)-.7 F 1.105
(indowAttributes, GetGeometry)-.4 F 6.105(,a)-.65 G(nd)494 598.8 Q
(QueryFont requests.)72 610.8 Q .667(This brings out an interesting point.)72
626.4 R .668(Where did the GetGeometry request come from?)5.667 F .668
(The answer is that)5.668 F(the)72 638.4 Q F1(XGetW)2.699 E -.834
(indowAttributes\( \))-.18 F F0(X1)2.699 E 2.699(1l)-.37 G .199
(ibrary call uses both the GetW)222.863 638.4 R .198
(indowAttributes and GetGeometry pro-)-.4 F .382(tocol request.)72 650.4 R .383
(It is easy to assume that there is a one-to-one mapping between X1)5.382 F
2.883(1l)-.37 G .383(ibrary calls and proto-)414.261 650.4 R .63(col requests,)
72 662.4 R .63(but this is not the case.)5.63 F .63(The use of)5.63 F F1(XGetW)
3.129 E -.834(indowAttributes\( \))-.18 F F0 .629(in this `)3.129 F 3.129
(`Hello, W)-.74 F(orld')-.8 E 3.129('p)-.74 G(ro-)492.34 662.4 Q(gram is inef)
72 674.4 Q(\214cient,)-.18 E F1 -.834(XGetGeometry\( \))5 F F0
(should be used instead.)2.5 E EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-9-)279.67 48 S/F1 10/Times-Bold@0 SF 2.5
(4. Defaults)72 84 R F0(This program wires-in a lar)72 99.6 Q
(ge number of parameters,)-.18 E(through the following statements:)5 E/F2 6
/Times-Roman@0 SF(if \(\(fontstruct = XLoadQueryFont\(dpy)114 111.6 Q 1.5(,F)
-.39 G(ONT\)\) == NULL\) {)-1.5 E(bd = WhitePixel\(dpy)114 117.6 Q 1.5(,D)-.39
G(efaultScreen\(dpy\)\);)-1.5 E(bg = BlackPixel\(dpy)114 123.6 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\);)-1.5 E(fg = WhitePixel\(dpy)114 129.6 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\);)-1.5 E(pad = BORDER;)114 135.6 Q(bw = 1;)114 141.6 Q
(xsh.height = fth + pad * 2;)114 153.6 Q(xsh.width = XT)114 159.6 Q(extW)-.42 E
(idth\(fontstruct, STRING, strlen\(STRING\)\) + pad * 2;)-.24 E
(xsh.x = \(DisplayW)114 165.6 Q(idth\(dpy)-.24 E 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.width\) / 2;)-1.5 E(xsh.y = \(DisplayHeight\(dpy)
114 171.6 Q 1.5(,D)-.39 G(efaultScreen\(dpy\)\) - xsh.height\) / 2;)-1.5 E F0
(Ideally)72 193.2 Q 5.536(,a)-.65 G .536
(nd certainly for any real application,)111.596 193.2 R .536
(the user should be able to override these wired-in defaults.)5.536 F(X1)72
205.2 Q 2.5(1s)-.37 G
(upplies a default database mechanism to address this problem.)95.24 205.2 Q F1
2.5(4.1. Pr)72 229.2 R(ogram)-.18 E F0 .429
(Here is the \214rst example, modi\214ed to use the X1)72 244.8 R 2.928(1d)-.37
G .428(efault database mechanism to allow the user to specify)282.286 244.8 R
.901(values for all these defaults.)72 256.8 R .902
(For each of the \214rst group,)5.902 F .902(it uses)5.902 F F1 -.834
(XGetDefault\( \))3.402 F F0 .902(to obtain a string value,)3.402 F .071
(and then parses it \(using)72 268.8 R F1 -.834(XParseColor\( \))2.571 F F0
2.571(,o)C(r)246.002 268.8 Q F1 -.834(atoi\( \))2.571 F F0 2.571(\)t)C 2.57(ot)
285.02 268.8 S .07(he required value.)295.37 268.8 R .07
(In the case of the window geom-)5.07 F .969
(etry values in the second group, X1)72 280.8 R 3.469(1p)-.37 G .969
(rovides a single mechanism \()232.833 280.8 R F1 -.834(XGeometry\( \))B F0
3.469(\)t)C 3.469(op)421.244 280.8 S .969(arse a string into)434.713 280.8 R
1.821(some or all of the parameters specifying the geometry of a window)72
292.8 R 6.82(.T)-.65 G 4.32(os)374.11 292.8 S 1.82(ave space,)387.32 292.8 R
1.82(and because the)6.82 F
(changes to deal with defaults are restricted to a small part of the code,)72
304.8 Q(they are presented as a context dif)5 E(f.)-.18 E F2(*** xhw0.c)108
316.8 Q(Sun Dec)151.2 316.8 Q 1.5(60)3 G(8:25:1)-1.5 E 1.5(11)-.222 G(987)-1.5
E(--- xhw1.c)108 322.8 Q(Sun Dec)151.2 322.8 Q 1.5(60)3 G(8:25:12 1987)-1.5 E
(***************)108 328.8 Q(*** 5,10 ****)108 334.8 Q(--- 5,17 ----)108 340.8
Q(#de\214ne STRING)111 346.8 Q("Hello, world")194.4 346.8 Q(#de\214ne BORDER)
111 352.8 Q(1)194.4 352.8 Q(#de\214ne FONT)111 358.8 Q("\214xed")5.37 E 1.5(+#)
108 364.8 S 19.152(de\214ne ARG_FONT)-1.5 F("font")237.6 364.8 Q 1.5(+#)108
370.8 S 19.152(de\214ne ARG_BORDER_COLOR)-1.5 F("bordercolor")237.6 370.8 Q 1.5
(+#)108 376.8 S 19.152(de\214ne ARG_FOREGROUND)-1.5 F("foreground")280.8 376.8
Q 1.5(+#)108 382.8 S 19.152(de\214ne ARG_BACKGROUND)-1.5 F("background")280.8
382.8 Q 1.5(+#)108 388.8 S(de\214ne ARG_BORDER)-1.5 E("border")237.6 388.8 Q
1.5(+#)108 394.8 S 19.152(de\214ne ARG_GEOMETR)-1.5 F 80.934(Y")-.33 G
(geometry")283.248 394.8 Q 1.5(+#)108 400.8 S(de\214ne DEF)-1.5 E(AUL)-.444 E
(T_GEOMETR)-.552 E .018(Y")-.33 G(")-.018 E(/*)111 412.8 Q 1.5(*T)112.5 418.8 S
(his structure forms the WM_HINTS property of the window)-1.5 E(,)-.39 E
(***************)108 424.8 Q(*** 29,38 ****)108 430.8 Q 4.5(Display *dpy;)117
436.8 R(/* X server connection */)237.6 436.8 Q -.24(Wi)117 442.8 S 7.5
(ndow win;).24 F(/* W)237.6 442.8 Q(indow ID */)-.24 E 13.5(GC gc;)117 448.8 R
(/* GC to draw with */)194.4 448.8 Q(XFontStruct *fontstruct;)117 454.8 Q
(/* Font descriptor */)194.4 454.8 Q 7.5(!u)108 460.8 S(nsigned long fth, pad;)
120.498 460.8 Q(/* Font size parameters */)194.4 460.8 Q
(unsigned long fg, bg, bd;)117 466.8 Q(/* Pixel values */)194.4 466.8 Q
(unsigned long bw;)117 472.8 Q(/* Border width */)237.6 472.8 Q(XGCV)117 478.8
Q 3(alues gcv;)-.666 F(/* Struct for creating GC */)237.6 478.8 Q 7.5
(XEvent event;)117 484.8 R(/* Event received */)237.6 484.8 Q 1.5
(XSizeHints xsh;)117 490.8 R(/* Size hints for window manager */)237.6 490.8 Q
(--- 36,49 ----)108 496.8 Q 4.5(Display *dpy;)117 502.8 R
(/* X server connection */)237.6 502.8 Q -.24(Wi)117 508.8 S 7.5(ndow win;).24
F(/* W)237.6 508.8 Q(indow ID */)-.24 E 13.5(GC gc;)117 514.8 R
(/* GC to draw with */)194.4 514.8 Q 7.5(+c)108 520.8 S 9(har *fontName;)
121.548 520.8 R(/* Name of font for string */)194.4 520.8 Q
(XFontStruct *fontstruct;)117 526.8 Q(/* Font descriptor */)194.4 526.8 Q 7.5
(!u)108 532.8 S(nsigned long ftw)120.498 532.8 Q 1.5(,f)-.39 G
(th, pad;/* Font size parameters */)-1.5 E(unsigned long fg, bg, bd;)117 538.8
Q(/* Pixel values */)194.4 538.8 Q(unsigned long bw;)117 544.8 Q
(/* Border width */)237.6 544.8 Q 7.5(+c)108 550.8 S 9(har *tempstr;)121.548
550.8 R(/* T)194.4 550.8 Q(emporary string */)-.42 E 7.5(+X)108 556.8 S 7.5
(Color color;)123.216 556.8 R(/* T)237.6 556.8 Q(emporary color */)-.42 E 7.5
(+C)108 562.8 S 4.5(olormap cmap;)122.886 562.8 R(/* Color map to use */)237.6
562.8 Q(XGCV)117 568.8 Q 3(alues gcv;)-.666 F(/* Struct for creating GC */)
237.6 568.8 Q 7.5(XEvent event;)117 574.8 R(/* Event received */)237.6 574.8 Q
1.5(XSizeHints xsh;)117 580.8 R(/* Size hints for window manager */)237.6 580.8
Q(***************)108 586.8 Q(*** 51,77 ****)108 592.8 Q(/*)117 598.8 Q 1.5(*L)
118.5 604.8 S(oad the font to use.)-1.5 E(See Sections 10.2 & 6.5.1)3 E(*/)
118.5 610.8 Q 7.5(!i)108 616.8 S 1.5(f\()119.166 616.8 S
(\(fontstruct = XLoadQueryFont\(dpy)-1.5 E 1.5(,F)-.39 G(ONT\)\) == NULL\) {)
-1.5 E(fprintf\(stderr)151.2 622.8 Q 1.5(,")-.24 G(%s: display %s doesn')-1.5 E
1.5(tk)-.108 G(now font %s\\n",)-1.5 E 84.402(!a)108 628.8 S -.108(rg)197.064
628.8 S(v[0], DisplayString\(dpy\), FONT\);).108 E(exit\(1\);)151.2 634.8 Q(})
117 640.8 Q
(fth = fontstruct->max_bounds.ascent + fontstruct->max_bounds.descent;)117
646.8 Q(/*)117 658.8 Q 1.5(*S)118.5 664.8 S(elect colors for the border)-1.5 E
3(,t)-.24 G(he window background,)194.244 664.8 Q(and the)3 E 9(!*)108 670.8 S
(foreground.)123.498 670.8 Q(*/)118.5 676.8 Q 7.5(!b)108 682.8 S 1.5(d=W)
120.498 682.8 S(hitePixel\(dpy)-1.5 E 1.5(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5
E 7.5(!b)108 688.8 S 1.5(g=B)120.498 688.8 S(lackPixel\(dpy)-1.5 E 1.5(,D)-.39
G(efaultScreen\(dpy\)\);)-1.5 E 7.5(!f)108 694.8 S 1.5(g=W)119.496 694.8 S
(hitePixel\(dpy)-1.5 E 1.5(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E(!)108 700.8
Q(/*)117 706.8 Q 1.5(*S)118.5 712.8 S(et the border width of the window)-1.5 E
3(,a)-.39 G(nd the gap between the text)214.764 712.8 Q 1.5(*a)118.5 718.8 S
(nd the edge of the window)-1.5 E 1.5(,")-.39 G(pad".)-1.5 E(*/)118.5 724.8 Q
EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 6/Times-Roman@0 SF 1.5(-1)281.502 42 S 1.5(0-)-1.5 G(pad = BORDER;)117 78 Q
7.5(!b)108 84 S 1.5(w=1)120.498 84 S(;)-1.5 E(/*)117 96 Q 1.5(*D)118.5 102 S
(eal with providing the window with an initial position & size.)-1.5 E
(--- 62,1)108 108 Q(17 ----)-.222 E(/*)117 114 Q 1.5(*L)118.5 120 S
(oad the font to use.)-1.5 E(See Sections 10.2 & 6.5.1)3 E(*/)118.5 126 Q 7.5
(!i)108 132 S 1.5(f\()119.166 132 S(\(fontName = XGetDefault\(dpy)-1.5 E 1.5
(,a)-.39 G -.108(rg)-1.5 G(v[0], ARG_FONT\)\) == NULL\) {).108 E 41.202(!f)108
138 S(ontName = FONT)153.198 138 Q(;)-.33 E 7.5(!})108 144 S 7.5(!i)108 150 S
1.5(f\()119.166 150 S(\(fontstruct = XLoadQueryFont\(dpy)-1.5 E 1.5(,f)-.39 G
(ontName\)\) == NULL\) {)-1.5 E(fprintf\(stderr)151.2 156 Q 1.5(,")-.24 G
(%s: display %s doesn')-1.5 E 1.5(tk)-.108 G(now font %s\\n",)-1.5 E 84.402(!a)
108 162 S -.108(rg)197.064 162 S(v[0], DisplayString\(dpy\), fontName\);).108 E
(exit\(1\);)151.2 168 Q(})117 174 Q
(fth = fontstruct->max_bounds.ascent + fontstruct->max_bounds.descent;)117 180
Q 7.5(+f)108 186 S(tw = fontstruct->max_bounds.width;)120.882 186 Q(/*)117 198
Q 1.5(*S)118.5 204 S(elect colors for the border)-1.5 E 3(,t)-.24 G
(he window background,)194.244 204 Q(and the)3 E 9(!*)108 210 S 1.5
(foreground. W)123.498 210 R 1.5(eu)-.48 G
(se the default colormap to allocate the colors in.)-1.5 E 9(!*)108 216 S
(See Sections 2.2.1, 5.1.2, & 10.4.)123.498 216 Q(*/)118.5 222 Q 7.5(!c)108 228
S(map = DefaultColormap\(dpy)120.162 228 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\);)-1.5 E 7.5(!i)108 234 S 1.5(f\()119.166 234 S
(\(tempstr = XGetDefault\(dpy)-1.5 E 1.5(,a)-.39 G -.108(rg)-1.5 G
(v[0], ARG_BORDER_COLOR\)\) == NULL ||).108 E 41.202(!X)108 240 S
(ParseColor\(dpy)155.532 240 Q 1.5(,c)-.39 G(map, tempstr)-1.5 E 1.5(,&)-.24 G
(color\) == 0 ||)-1.5 E 41.202(!X)108 246 S(AllocColor\(dpy)155.532 246 Q 1.5
(,c)-.39 G(map, &color\) == 0\) {)-1.5 E 41.202(!b)108 252 S 1.5(d=W)154.2 252
S(hitePixel\(dpy)-1.5 E 1.5(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E 7.5(!})108
258 S 7.5(!e)108 264 S(lse {)120.162 264 Q 41.202(!b)108 270 S 1.5(d=c)154.2
270 S(olor)-1.5 E(.pixel;)-.33 E 7.5(!})108 276 S 7.5(!i)108 282 S 1.5(f\()
119.166 282 S(\(tempstr = XGetDefault\(dpy)-1.5 E 1.5(,a)-.39 G -.108(rg)-1.5 G
(v[0], ARG_BACKGROUND\)\) == NULL ||).108 E 41.202(!X)108 288 S
(ParseColor\(dpy)155.532 288 Q 1.5(,c)-.39 G(map, tempstr)-1.5 E 1.5(,&)-.24 G
(color\) == 0 ||)-1.5 E 41.202(!X)108 294 S(AllocColor\(dpy)155.532 294 Q 1.5
(,c)-.39 G(map, &color\) == 0\) {)-1.5 E 41.202(!b)108 300 S 1.5(g=B)154.2 300
S(lackPixel\(dpy)-1.5 E 1.5(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E 7.5(!})108
306 S 7.5(!e)108 312 S(lse {)120.162 312 Q 41.202(!b)108 318 S 1.5(g=c)154.2
318 S(olor)-1.5 E(.pixel;)-.33 E 7.5(!})108 324 S 7.5(!i)108 330 S 1.5(f\()
119.166 330 S(\(tempstr = XGetDefault\(dpy)-1.5 E 1.5(,a)-.39 G -.108(rg)-1.5 G
(v[0], ARG_FOREGROUND\)\) == NULL ||).108 E 41.202(!X)108 336 S
(ParseColor\(dpy)155.532 336 Q 1.5(,c)-.39 G(map, tempstr)-1.5 E 1.5(,&)-.24 G
(color\) == 0 ||)-1.5 E 41.202(!X)108 342 S(AllocColor\(dpy)155.532 342 Q 1.5
(,c)-.39 G(map, &color\) == 0\) {)-1.5 E 41.202(!f)108 348 S 1.5(g=W)153.198
348 S(hitePixel\(dpy)-1.5 E 1.5(,D)-.39 G(efaultScreen\(dpy\)\);)-1.5 E 7.5(!})
108 354 S 7.5(!e)108 360 S(lse {)120.162 360 Q 41.202(!f)108 366 S 1.5(g=c)
153.198 366 S(olor)-1.5 E(.pixel;)-.33 E 7.5(!})108 372 S(/*)117 378 Q 1.5(*S)
118.5 384 S(et the border width of the window)-1.5 E 3(,a)-.39 G
(nd the gap between the text)214.764 384 Q 1.5(*a)118.5 390 S
(nd the edge of the window)-1.5 E 1.5(,")-.39 G(pad".)-1.5 E(*/)118.5 396 Q
(pad = BORDER;)117 402 Q 7.5(!i)108 408 S 1.5(f\()119.166 408 S
(\(tempstr = XGetDefault\(dpy)-1.5 E 1.5(,a)-.39 G -.108(rg)-1.5 G
(v[0], ARG_BORDER\)\) == NULL\)).108 E 41.202(!b)108 414 S 1.5(w=1)154.2 414 S
(;)-1.5 E 7.5(!e)108 420 S(lse)120.162 420 Q 41.202(!b)108 426 S 1.5(w=a)154.2
426 S(toi\(tempstr\);)-1.5 E(/*)117 438 Q 1.5(*D)118.5 444 S
(eal with providing the window with an initial position & size.)-1.5 E
(***************)108 450 Q(*** 78,88 ****)108 456 Q 1.5(*F)118.5 462 S
(ill out the XSizeHints struct to inform the window manager)-1.5 E 1.5(.S)-.33
G(ee)-1.5 E 1.5(*S)118.5 468 S(ections 9.1.6 & 10.3.)-1.5 E(*/)118.5 474 Q 7.5
(!x)108 480 S(sh.\215ags = \(PPosition | PSize\);)120.498 480 Q 7.5(!x)108 486
S(sh.height = fth + pad * 2;)120.498 486 Q 7.5(!x)108 492 S(sh.width = XT)
120.498 492 Q(extW)-.42 E
(idth\(fontstruct, STRING, strlen\(STRING\)\) + pad * 2;)-.24 E 7.5(!x)108 498
S(sh.x = \(DisplayW)120.498 498 Q(idth\(dpy)-.24 E 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.width\) / 2;)-1.5 E 7.5(!x)108 504 S
(sh.y = \(DisplayHeight\(dpy)120.498 504 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.height\) / 2;)-1.5 E(/*)117 516 Q 1.5(*C)118.5 522
S(reate the W)-1.5 E(indow with the information in the XSizeHints, the)-.24 E
(--- 1)108 528 Q(18,150 ----)-.222 E 1.5(*F)118.5 534 S
(ill out the XSizeHints struct to inform the window manager)-1.5 E 1.5(.S)-.33
G(ee)-1.5 E 1.5(*S)118.5 540 S(ections 9.1.6 & 10.3.)-1.5 E(*/)118.5 546 Q 7.5
(!g)108 552 S(eomSpec = XGetDefault\(dpy)120.498 552 Q 1.5(,a)-.39 G -.108(rg)
-1.5 G(v[0], ARG_GEOMETR).108 E(Y\);)-.33 E 7.5(!i)108 558 S 1.5(f\()119.166
558 S(geomSpec == NULL\) {)-1.5 E 41.202(!/)108 564 S(*)152.868 564 Q 42.702
(!*)108 570 S(The defaults database doesn')157.2 570 Q 1.5(tc)-.108 G
(ontain a speci\214cation of the)-1.5 E 42.702(!*)108 576 S
(initial size & position - \214t the window to the text and locate)157.2 576 Q
42.702(!*)108 582 S(it in the center of the screen.)157.2 582 Q 42.702(!*)108
588 S(/)155.7 588 Q 41.202(!x)108 594 S(sh.\215ags = \(PPosition | PSize\);)
154.2 594 Q 41.202(!x)108 600 S(sh.height = fth + pad * 2;)154.2 600 Q 41.202
(!x)108 606 S(sh.width = XT)154.2 606 Q(extW)-.42 E
(idth\(fontstruct, STRING, strlen\(STRING\)\) + pad * 2;)-.24 E 41.202(!x)108
612 S(sh.x = \(DisplayW)154.2 612 Q(idth\(dpy)-.24 E 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.width\) / 2;)-1.5 E 41.202(!x)108 618 S
(sh.y = \(DisplayHeight\(dpy)154.2 618 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\)\) - xsh.height\) / 2;)-1.5 E 7.5(!})108 624 S 7.5(!e)108
630 S(lse {)120.162 630 Q 41.202(!i)108 636 S 12(nt bitmask;)152.868 636 R(!)
108 642 Q 41.202(!b)108 648 S(zero\(&xsh, sizeof\(xsh\)\);)154.2 648 Q 41.202
(!b)108 654 S(itmask = XGeometry\(dpy)154.2 654 Q 1.5(,D)-.39 G
(efaultScreen\(dpy\), geomSpec, DEF)-1.5 E(AUL)-.444 E(T_GEOMETR)-.552 E -.774
(Y,)-.33 G 133.602(!b)108 660 S .78 -.39(w, f)246.6 660 T(tw).39 E 1.5(,f)-.39
G(th, pad, pad, &\(xsh.x\), &\(xsh.y\),)-1.5 E 133.602(!&)108 666 S
(\(xsh.width\), &\(xsh.height\)\);)248.268 666 Q 41.202(!i)108 672 S 1.5(f\()
152.868 672 S(bitmask & \(XV)-1.5 E(alue | YV)-.666 E(alue\)\) {)-.666 E 47.202
(!x)108 678 S(sh.\215ags |= USPosition;)160.2 678 Q 41.202(!})108 684 S 41.202
(!i)108 690 S 1.5(f\()152.868 690 S(bitmask & \(W)-1.5 E(idthV)-.24 E
(alue | HeightV)-.666 E(alue\)\) {)-.666 E 47.202(!x)108 696 S
(sh.\215ags |= USSize;)160.2 696 Q 41.202(!})108 702 S 7.5(!})108 708 S(/*)117
720 Q EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 6/Times-Roman@0 SF 1.5(-1)281.613 42 S 1.5(1-)-1.722 G 1.5(*C)118.5 78 S
(reate the W)-1.5 E(indow with the information in the XSizeHints, the)-.24 E/F1
10/Times-Bold@0 SF 2.5(4.2. Pr)72 111.6 R(otocol Usage)-.18 E/F2 10
/Times-Roman@0 SF -.35(Tu)72 127.2 S .975
(rning statistics gathering on for this version,).35 F .975(we get T)5.975 F
.976(ables 3 and 4.)-.7 F .976(The extra replies come from the)5.976 F .523
(mappings between string names and colors for the foreground,)72 139.2 R 3.023
(background, and)5.523 F(border)3.023 E 5.523(.T)-.55 G .523(hese mappings)
444.317 139.2 R .394
(could have been done with a single AllocNamedColor request each,)72 151.2 R
.394(instead of a LookupColor/AllocColor)5.394 F(pair)72 163.2 Q 5(,b)-.4 G(ut\
 this would not have supported the convention that colors can be speci\214ed b\
y strings like `)99.65 163.2 Q(`#3a7')-.74 E('.)-.74 E .4 LW 371.665 173.7
204.335 173.7 DL -.7(Ta)209.335 183.2 S(ble 3: Aggregate Statistics - Defaults)
.7 E 371.665 187.7 204.335 187.7 DL 56.165(Statistic V)242.273 197.2 R(alue)
-1.11 E 371.665 201.7 204.335 201.7 DL(number of writes)209.335 211.2 Q(10)
344.552 211.2 Q(number of reads)209.335 223.2 Q(24)344.552 223.2 Q
(bytes written)209.335 235.2 Q(504)339.552 235.2 Q(bytes read)209.335 247.2 Q
(1928)334.552 247.2 Q(number of requests)209.335 259.2 Q(22)344.552 259.2 Q
(number of errors)209.335 271.2 Q(0)349.552 271.2 Q(number of events)209.335
283.2 Q(1)349.552 283.2 Q(number of replies)209.335 295.2 Q(9)349.552 295.2 Q
371.665 299.7 204.335 299.7 DL 371.665 173.7 371.665 299.7 DL 204.335 173.7
204.335 299.7 DL 368.745 311.7 207.255 311.7 DL -.7(Ta)212.255 321.2 S
(ble 4: Usage of Requests - Defaults).7 E 368.745 325.7 207.255 325.7 DL 52.41
(Request Count)250.303 335.2 R 368.745 339.7 207.255 339.7 DL(CreateW)212.255
349.2 Q 72.262(indow 1)-.4 F(ChangeW)212.255 361.2 Q 27.812(indowAttributes 2)
-.4 F(GetW)212.255 373.2 Q 43.922(indowAttributes 1)-.4 F(MapW)212.255 385.2 Q
80.032(indow 1)-.4 F 77.972(GetGeometry 1)212.255 397.2 R 67.412
(ChangeProperty 5)212.255 409.2 R 92.402(OpenFont 1)212.255 421.2 R 89.072
(QueryFont 1)212.255 433.2 R 92.412(CreateGC 1)212.255 445.2 R 86.872
(CleaarArea 1)212.255 457.2 R(PolyT)212.255 469.2 Q 91.432(ext8 1)-.7 F 87.402
(AllocColor 3)212.255 481.2 R 78.512(LookupColor 3)212.255 493.2 R 368.745
497.7 207.255 497.7 DL 368.745 311.7 368.745 497.7 DL 207.255 311.7 207.255
497.7 DL F1 2.5(5. The)72 523.2 R -.92(To)2.5 G(olkit).92 E F2 2.191
(Examining the preceding examples,)72 538.8 R 2.191
(anyone would admit that the basic X1)7.191 F 4.69(1l)-.37 G 2.19
(ibrary fails the `)405.97 538.8 R(`Hello,)-.74 E -.8(Wo)72 550.8 S(rld').8 E
4.785('t)-.74 G 4.785(est. Even)110.235 550.8 R 2.285(the simplest `)4.785 F
4.786(`Hello, W)-.74 F(orld')-.8 E 4.786('c)-.74 G 2.286
(lient takes 40 executable statements,)289.418 550.8 R 2.286(and 25 calls)7.286
F(through the X1)72 562.8 Q 2.5(1l)-.37 G(ibrary interface.)142.46 562.8 Q .441
(All is not lost,)72 578.4 R(however)5.441 E 5.441(.I)-.55 G 2.941(tw)180.595
578.4 S .44
(as never intended that normal applications programmers would use the basic)
193.536 578.4 R(X1)72 590.4 Q 3.45(1l)-.37 G .95(ibrary interface.)95.08 590.4
R .95(An analogy is that very few U)5.95 F/F3 8/Times-Roman@0 SF(NIX)A F2 .951
(programmers use the raw system call interface,)3.45 F .315
(they almost all use the higher)72 602.4 R .315(-level `)-.2 F .315
(`Standard I/O Library')-.74 F 2.815('i)-.74 G 2.815(nterface. The)318.385
602.4 R .315(canonical `)2.815 F 2.815(`Hello, W)-.74 F(orld')-.8 E 2.815('p)
-.74 G(ro-)492.34 602.4 Q(gram is an example.)72 614.4 Q .59(The X1)72 630 R
3.09(1d)-.37 G .59(istribution includes a user interface toolkit,)115.58 630 R
.59(intended to provide a more congenial environment)8.09 F .576
(for applications development in exactly the same way that)72 642 R/F4 10
/Times-Italic@0 SF(stdio)3.075 E F2 .575(does for vanilla U)3.075 F F3(NIX)A F2
5.575(.U)C .575(sing this toolkit,)438.11 642 R
(the following example shows that X1)72 654 Q 2.5(1c)-.37 G(an pass the `)
233.28 654 Q 2.5(`Hello, W)-.74 F(orld')-.8 E 2.5('t)-.74 G(est with ease.)
351.25 654 Q F1 2.5(5.1. Pr)72 678 R(ogram Outline)-.18 E F2
(The outline of the program is:)72 693.6 Q 11.5<8343>72 709.2 S
(reate the top level W)93.67 709.2 Q(idget that represents the toolkit')-.4 E
2.5(sv)-.55 G(iew of the \(top-level\) window)314.63 709.2 Q(.)-.65 E EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 48 S 2.5(2-)288 48 S 11.5<8343>72 84 S
.14(reate a Label W)93.67 84 R .14(idget to display the string,)-.4 F(over)
5.141 E .141(-riding the defaults database to set the Label')-.2 F 2.641(sv)
-.55 G .141(alue to)476.919 84 R(the string to display)87 96 Q(.)-.65 E 11.5
<8354>72 111.6 S(ell the top level W)92.41 111.6 Q(idget to display the label,)
-.4 E(by adding it to the top level W)5 E(idget')-.4 E 2.5(sm)-.55 G
(anaged list.)430.21 111.6 Q 11.5<8352>72 127.2 S .57(ealize the top level W)
93.67 127.2 R .569(idget \(and therefore its sub-W)-.4 F 3.069(idgets\). This)
-.4 F .569(process creates an X1)3.069 F 3.069(1w)-.37 G .569(indow for)464.271
127.2 R(each W)87 139.2 Q 2.5(idget, setting)-.4 F
(its attributes from the data in the W)2.5 E(idget.)-.4 E 11.5<834c>72 154.8 S
(oop forever)93.11 154.8 Q 5(,p)-.4 G(rocessing the events that appear)151.58
154.8 Q(.)-.55 E/F1 10/Times-Bold@0 SF 2.5(5.2. Pr)72 178.8 R(ogram T)-.18 E
(ext)-.92 E/F2 6/Times-Roman@0 SF(#include <stdio.h>)108 194.4 Q(#include <X1)
108 200.4 Q(1/Xlib.h>)-.222 E(#include <X1)108 206.4 Q(1/Intrinsic.h>)-.222 E
(#include <X1)108 212.4 Q(1/Atoms.h>)-.222 E(#include <X1)108 218.4 Q
(1/Label.h>)-.222 E 24.036(#de\214ne STRING)108 230.4 R 1.5("Hello, W)194.4
230.4 R(orld")-.48 E(Ar)108 242.4 Q 1.5(gw)-.108 G(ar)-1.5 E(gs[] = {)-.108 E
12.204(XtNlabel, \(XtAr)114 248.4 R(gV)-.108 E(al\) STRING,)-.666 E(};)108
254.4 Q(main\(ar)108 266.4 Q(gc, ar)-.108 E(gv\))-.108 E(int ar)114 272.4 Q
(gc;)-.108 E(char **ar)114 278.4 Q(gv;)-.108 E({)108 284.4 Q -.24(Wi)114 290.4
S 7.5(dget toplevel,).24 F(label;)1.5 E(/*)114 302.4 Q 1.5(*C)115.5 308.4 S
(reate the W)-1.5 E(idget that represents the window)-.24 E(.)-.39 E 1.5(*S)
115.5 314.4 S(ee Section 14 of the T)-1.5 E(oolkit manual.)-.42 E(*/)115.5
320.4 Q(toplevel = XtInitialize\(ar)114 326.4 Q(gv[0], "XLabel", NULL, 0, &ar)
-.108 E(gc, ar)-.108 E(gv\);)-.108 E(/*)114 338.4 Q 1.5(*C)115.5 344.4 S
(reate a W)-1.5 E(idget to display the string,)-.24 E(using war)3 E(gs to set)
-.108 E 1.5(*t)115.5 350.4 S(he string as its value.)-1.5 E(See Section 9.1.)3
E(*/)115.5 356.4 Q(label = XtCreateW)114 362.4 Q(idget\(ar)-.24 E
(gv[0], labelW)-.108 E(idgetClass,)-.24 E(toplevel, war)242.1 368.4 Q
(gs, XtNumber\(war)-.108 E(gs\)\);)-.108 E(/*)114 380.4 Q 1.5(*T)115.5 386.4 S
(ell the toplevel widget to display the label.)-1.92 E(See Section 13.5.2.)3 E
(*/)115.5 392.4 Q(XtManageChild\(label\);)114 398.4 Q(/*)114 410.4 Q 1.5(*C)
115.5 416.4 S(reate the windows,)-1.5 E(and set their attributes according)3 E
1.5(*t)115.5 422.4 S 1.5(ot)-1.5 G(he W)-1.5 E(idget data.)-.24 E
(See Section 9.2.)3 E(*/)115.5 428.4 Q(XtRealizeW)114 434.4 Q
(idget\(toplevel\);)-.24 E(/*)114 446.4 Q 1.5(*N)115.5 452.4 S
(ow process the events.)-1.5 E(See Section 16.6.2.)3 E(*/)115.5 458.4 Q
(XtMainLoop\(\);)114 464.4 Q(})108 470.4 Q F1 2.5(5.3. Does)72 500.4 R
(it meet the speci\214cation?)2.5 E F0(This implementation of `)72 516 Q 2.5
(`Hello, W)-.74 F(orld')-.8 E 2.5('f)-.74 G(ul\214lls the speci\214cation:)
240.53 516 Q 11.5<8354>72 531.6 S .599(he window is sized as a result of the g\
eometry negotiation between the top level W)93.11 531.6 R .6
(idget and its sub-)-.4 F -.4(Wi)87 543.6 S(dgets \(in this case the label\),)
.4 E(so that by default the window is sized to \214t the text.)5 E 11.5<8354>72
559.2 S .416(he default attributes for the Label W)93.11 559.2 R .415
(idget specify that the text is centered, and the default mechanism)-.4 F
(supplies a suitable font.)87 571.2 Q 11.5<8349>72 586.8 S 2.5(nt)90.33 586.8 S
(he same way)100.61 586.8 Q 5(,t)-.65 G
(he default mechanism supplies background and foreground colors for the W)
161.89 586.8 Q(idget.)-.4 E 11.5<8354>72 602.4 S 2.047
(he toolkit manages all Expose events,)93.11 602.4 R 2.047
(routing them to appropriate W)7.047 F 4.547(idgets. Thus, the)-.4 F(program)
4.547 E(behaves correctly for exposure.)87 614.4 Q 11.5<8354>72 630 S .358
(he Label W)93.11 630 R .358
(idget recomputes the centering of the text whenever it is being painted,)-.4 F
.357(so that resizing is)5.357 F(handled correctly)87 642 Q(.)-.65 E 11.5<8354>
72 657.6 S .563(he toolkit handles communicating with the window manager about\
 icon properties,)93.11 657.6 R .563(so that iconi\214ca-)5.563 F
(tion is handled correctly)87 669.6 Q(.)-.65 E F1 2.5(5.4. Design)72 693.6 R
(Issues)2.5 E F0 .105(Note that this implementation isn')72 709.2 R 2.605(tm)
-.18 G .105(erely much shorter than the earlier examples.)222.075 709.2 R .105
(It has an additional use-)5.105 F .651(ful feature,)72 721.2 R .652(in that a\
ny or all the values from the default database used by the program can be over\
ridden)5.651 F EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 48 S 2.5(3-)288 48 S 1.244
(by command line ar)72 84 R(guments.)-.18 E/F1 10/Times-Bold@0 SF -.834
(XtInitialize\( \))6.244 F F0 1.244(parses the command line and mer)3.744 F
1.244(ges any speci\214ers it \214nds)-.18 F(there with the defaults database.)
72 96 Q .1(The toolkit also provides peace of mind by or)72 111.6 R .101
(ganizing the error handling correctly)-.18 F 5.101(.A)-.65 G .101
(lthough the documen-)416.028 111.6 R .37
(tation of error handling in the toolkit manual is sparse,)72 123.6 R .37
(experiments seem to show that the implementation)5.37 F(is satisfactory)72
135.6 Q 5(,p)-.65 G(roviding intelligible messages and sensible behaviour)
139.12 135.6 Q(.)-.55 E F1 2.5(5.5. Pr)72 159.6 R(otocol Usage)-.18 E F0 -.35
(Tu)72 175.2 S(rning statistics gathering on for the toolkit version gives T)
.35 E(ables 5 and 6.)-.7 E .4 LW 369.1 185.7 206.9 185.7 DL -.7(Ta)211.9 195.2
S(ble 5: Aggregate Statistics - T).7 E(oolkit)-.7 E 369.1 199.7 206.9 199.7 DL
53.6(Statistic V)243.555 209.2 R(alue)-1.11 E 369.1 213.7 206.9 213.7 DL
(number of writes)211.9 223.2 Q -.37(11)343.64 223.2 S(number of reads)211.9
235.2 Q(25)343.27 235.2 Q(bytes written)211.9 247.2 Q(832)338.27 247.2 Q
(bytes read)211.9 259.2 Q(2012)333.27 259.2 Q(number of requests)211.9 271.2 Q
(29)343.27 271.2 Q(number of errors)211.9 283.2 Q(0)348.27 283.2 Q
(number of events)211.9 295.2 Q(4)348.27 295.2 Q(number of replies)211.9 307.2
Q(9)348.27 307.2 Q 369.1 311.7 206.9 311.7 DL 369.1 185.7 369.1 311.7 DL 206.9
185.7 206.9 311.7 DL 366.18 323.7 209.82 323.7 DL -.7(Ta)214.82 333.2 S
(ble 6: Usage of Requests - T).7 E(oolkit)-.7 E 366.18 337.7 209.82 337.7 DL
49.845(Request Count)243.948 347.2 R 366.18 351.7 209.82 351.7 DL(CreateW)
214.82 361.2 Q 60.777(indow 2)-.4 F(MapW)214.82 373.2 Q 68.547(indow 1)-.4 F
50.917(MapSubwindows 1)214.82 385.2 R(Con\214gureW)214.82 397.2 Q 46.877
(indow 1)-.4 F 74.257(InternAtom 2)214.82 409.2 R 55.927(ChangeProperty 5)
214.82 421.2 R 80.917(OpenFont 1)214.82 433.2 R 77.587(QueryFont 1)214.82 445.2
R 64.257(CreatePixmap 3)214.82 457.2 R 80.927(CreateGC 3)214.82 469.2 R 89.257
(FreeGC 1)214.82 481.2 R 82.587(PutImage 1)214.82 493.2 R(PolyT)214.82 505.2 Q
79.947(ext8 1)-.7 F 75.917(AllocColor 3)214.82 517.2 R 67.027(LookupColor 3)
214.82 529.2 R 366.18 533.7 209.82 533.7 DL 366.18 323.7 366.18 533.7 DL 209.82
323.7 209.82 533.7 DL(These tables reveal that:)72 550.8 Q 11.5<8355>72 566.4 S
(se of the toolkit does not result in signi\214cantly greater protocol traf)
94.22 566.4 Q(\214c.)-.18 E 11.5<8354>72 582 S .976
(he toolkit does not use GetW)93.11 582 R .976(indowAttributes or Get Geometry)
-.4 F 5.977(.I)-.65 G .977(ts repaint and resize strategies use)363.315 582 R
(the information in Expose and Con\214gureNotify events,)87 594 Q(and don')5 E
2.5(tr)-.18 G(equire round-trips.)355.96 594 Q 2.039 -.7(To c)72 609.6 T .638
(ompare the performance of the toolkit and vanilla versions,).7 F .638
(we can contrast the cost of being resized)5.638 F .757(by the)72 621.6 R/F2 10
/Times-Italic@0 SF(uwm)3.257 E F0 .757(window manager)3.257 F 5.757(.T)-.55 G
.758(his is more meaningful than the total cost since startup,)206.605 621.6 R
.758(since in general)5.758 F .084
(window system clients are well advised to invest extra ef)72 633.6 R .083
(fort in startup code to improve response to interac-)-.18 F(tions.)72 645.6 Q
-.7(Ta)72 661.2 S .38
(ble 7 shows that the simplistic repaint and resize strategies of the V).7 F
.38(anilla version cost signi\214cantly more)-1.11 F(in terms of the number of\
 round-trips \(4 vs. 0\) and the amount of data transferred \(344 vs. 272\))72
673.2 Q/F3 8/Times-Roman@0 SF(5)451.93 669.2 Q F0(.)455.93 673.2 Q .32 LW 76
688 72 688 DL 80 688 76 688 DL 84 688 80 688 DL 88 688 84 688 DL 92 688 88 688
DL 96 688 92 688 DL 100 688 96 688 DL 104 688 100 688 DL 108 688 104 688 DL 112
688 108 688 DL 116 688 112 688 DL 120 688 116 688 DL 124 688 120 688 DL 128 688
124 688 DL 132 688 128 688 DL 136 688 132 688 DL 140 688 136 688 DL 144 688 140
688 DL F3 4.042(5T)72 698 S .042(he reasons why resizing with)84.93 698 R/F4 8
/Times-Italic@0 SF(uwm)2.042 E F3 .041(results in several events are too compl\
ex to go into here \(i.e. both uwm and the serv-)2.042 F(er have bugs\).)72 708
Q EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 2.5(-1)277.17 48 S 2.5(4-)288 48 S .4 LW 380.78 82.5
195.22 82.5 DL -.7(Ta)222.245 92 S(ble 7: Cost of resize with).7 E/F1 10
/Times-Italic@0 SF(uwm)2.5 E 380.78 96.5 195.22 96.5 DL F0 47.575(Item V)
235.295 106 R 12.5(anilla T)-1.11 F(oolkit)-.7 E 380.78 110.5 195.22 110.5 DL
(number of writes)200.22 120 Q 38.54(64)320.365 120 S(number of reads)200.22
132 Q 36.04(15 4)315.365 132 R(bytes written)200.22 144 Q 26.41(128 1)310.365
144 R(12)-.37 E(bytes read)200.22 156 Q 26.04(248 160)310.365 156 R
(number of requests)200.22 168 Q 38.54(84)320.365 168 S(number of events)200.22
180 Q 38.54(35)320.365 180 S(number of replies)200.22 192 Q 38.54(40)320.365
192 S 380.78 196.5 195.22 196.5 DL(GetW)200.22 206 Q 29.165(indowAttributes 2)
-.4 F(0)363.905 206 Q 63.215(GetGeometry 2)200.22 218 R(0)363.905 218 Q
(Con\214gureW)200.22 230 Q 43.605(indow 0)-.4 F(1)363.905 230 Q 76.555
(ClearArea 2)200.22 242 R(0)363.905 242 Q(PolyT)200.22 254 Q 76.675(ext8 2)-.7
F(3)363.905 254 Q 380.78 258.5 195.22 258.5 DL 380.78 82.5 380.78 258.5 DL
195.22 82.5 195.22 258.5 DL/F2 10/Times-Bold@0 SF 2.5(6. Conclusions)72 272 R
F0 .148(These examples demonstrate that programming applications using only th\
e basic X library interface is even)72 287.6 R(more dif)72 299.6 Q
(\214cult and unrewarding than programming U)-.18 E/F3 8/Times-Roman@0 SF(NIX)A
F0(applications using only the system call interface.)2.5 E 1.343
(Observing the usage of X1)72 315.2 R 3.843(1p)-.37 G 1.343
(rotocol requests gives a server)198.045 315.2 R 1.343
(-independent measure of X1)-.2 F 3.842(1c)-.37 G 1.342(lient perfor)454.818
315.2 R(-)-.2 E 2.604(mance. This)72 327.2 R .104
(can be a useful tool in debugging and performance-tuning X1)2.604 F 2.605(1c)
-.37 G 2.605(lients, the)385.04 327.2 R .105(more so in that the)2.605 F(perfo\
rmance of interactive clients is likely to be dominated by the number of round\
-trips per interaction.)72 339.2 Q .536
(Just as anyone considering developing U)72 354.8 R F3(NIX)A F0 .536
(applications should use)3.036 F F1(stdio)3.036 E F0 3.036(,a)C .536
(nyone considering developing)382.388 354.8 R(X1)72 366.8 Q 3.312(1a)-.37 G
.812(pplications should use a toolkit.)96.602 366.8 R .812
(There is \(at least\) one in the distribution,)5.812 F .813
(and others are available)5.813 F(from other sources.)72 378.8 Q
(Using a toolkit,)5 E(you can expect:)5 E 11.5<8369>72 394.4 S .293
(solation from complex and,)89.78 394.4 R .292(as yet,)5.292 F .292
(undecided design issues about the interaction between X1)5.292 F 2.792(1c)-.37
G(lients)482.33 394.4 Q(and their environment,)87 406.4 Q 11.5<8363>72 422 S
(ompetitive performance,)91.44 422 Q(at least in terms of protocol usage,)5 E
11.5<8361>72 437.6 S(nd much less verbose and more maintainable source code.)
91.44 437.6 Q .262(In the case of `)72 453.2 R 2.763(`Hello, W)-.74 F(orld')-.8
E 2.763(', a)-.74 F .263
(client that took 40 executable statements to program using the basic X1)2.763
F(1)-.37 E .358(library took 5 statements to program using the X1)72 465.2 R
2.857(1t)-.37 G 2.857(oolkit. And)284.561 465.2 R .357
(the toolkit version had more functionality)2.857 F
(and better repaint performance than a library version with 60 statements.)72
477.2 Q F2(Acknowledgements)72 501.2 Q F0 .276
(Richard Johnson posted the \214rst attempt at a `)72 516.8 R 2.776(`Hello, W)
-.74 F(orld')-.8 E 2.776('p)-.74 G .276(rogram for X1)328.56 516.8 R 2.776(1t)
-.37 G 2.776(ot)397.058 516.8 S(he)407.614 516.8 Q F1(xpert)2.776 E F0 .277
(mail list.)2.776 F(This,)5.277 E 1.034(and Ellis Cohen')72 528.8 R 3.534(sp)
-.55 G 1.034(raiseworthy attempts to write up the conventions needed for commu\
nicating between)153.162 528.8 R
(applications and window managers, inspired me to try to write the `)72 540.8 Q
2.5(`Hello, W)-.74 F(orld')-.8 E 2.5('p)-.74 G(rogram right.)413 540.8 Q .893
(Jim Gettys,)72 556.4 R .893(Bob Schei\215er)5.893 F 5.893(,&)-.4 G .894
(Mark Opperman all identi\214ed bugs and suggested \214xes in the V)199.126
556.4 R .894(anilla ver)-1.11 F(-)-.2 E 2.5(sion. The)72 568.4 R
(toolkit version is derived from)2.5 E F1(lib/Xtk/clients/xlabel)2.5 E F0(.)A
F2 2.5(Appendix: ANSI)72 592.4 R 2.5(CH)2.5 G(ello W)165.9 592.4 Q(orld)-.55 E
/F4 6/Times-Roman@0 SF(#include <stdio.h>)108 608 Q(main\(\))108 620 Q({)108
626 Q(\(void\) printf\("Hello, W)114 632 Q(orld\\n"\);)-.48 E(exit \(0\);)114
638 Q(})108 644 Q F0 11.5<8341>72 665.6 S
(NSI C speci\214es that printf\(\) returns the number of characters printed.)
94.22 665.6 Q 11.5<8349>72 681.2 S 2.5(ti)90.33 681.2 S 2.5(sn)98.39 681.2 S
(ecessary to exit\(\) or return\(\) a value from main\(\).)109.78 681.2 Q EP
%%Trailer
end
%%EOF
