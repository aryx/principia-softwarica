To compile and install Plan9, you need a working Plan9 environment.
Indeed, the C source code of Plan9 uses a special dialect of C that is
supported only by the Plan9 C compiler (not gcc, not clang). Moreover,
the few assembly files in Plan9 also require the Plan9 assemblers
(not gas). Finally, the building process relies on a few Plan9 tools
(e.g., mk, rc, hoc), or UNIX tools (e.g., ar, yacc, sed, xd, date) using
Plan9-specific options found only on Plan9 (not the GNU utilities).

Thus, the first option to compile this repository is to install
first the original Plan9, for example, by using a live CD 
(see https://9p.io/plan9/download.html).

The second option is to cross-compile the code in this repository from
Linux, macOS, or even Windows. In this fork of Plan9, I reorganized the code and
build system to make it possible to cross-compile from another
operating system, which makes it easy to experiment with. Indeed, some of
the Plan9 tools have been ported to those operating systems.
To cross-compile, you must first install:
 - a C cross compiler that can handle Plan9 code,
   see https://github.com/aryx/fork-kencc
 - the mk build tool, the rc shell, and other Plan9 utilities
   that are also in https://github.com/aryx/fork-kencc

Then you'll need to adapt and source env.sh to setup the right environment 
(essentially to find the compilers, mk, and rc in kencc/).
See install_linux.txt, install_macos.txt, or install_windows.txt for more
details for each platform.

If you want to typeset the books of the Principia Softwarica series,
you will also need: 
 - TeX and LaTeX
 - syncweb (which itself requires ocaml to compile)
   see https://github.com/aryx/syncweb
