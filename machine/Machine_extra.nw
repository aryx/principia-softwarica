\section{[[machine/5i/]]}

\subsection*{[[machine/5i/arm.h]]}

%-------------------------------------------------------------

<<machine/5i/arm.h>>=
/*
 * arm.h
 */

// forward decls
typedef	struct	Registers	Registers;
typedef	struct	Segment		Segment;
typedef	struct	Memory		Memory;
typedef	struct	Inst		Inst;
typedef	struct	Icache		Icache;
typedef	struct	Tlb			Tlb;
typedef	struct	Breakpoint	Breakpoint;

<<typedef instruction>>

<<enum breakpoint_kind>>

<<struct Breakpoint>>

<<enum ixxx>>

// added by pad
<<enum opcode>>

<<constant Nmaxtlb>>

<<enum regxxx>>

<<struct Tlb>>

<<struct Icache>>


<<struct Inst>>

<<struct Registers>>

<<enum memxxx>>

<<enum compare_op>>

<<enum segment_kind>>

<<struct Segment>>

<<struct Memory>>

// for cmd.c
void		run(void);
// for cmd.c reset
void		initstk(int, char**);
// for syscalls.c
char*		memio(char*, ulong, int, int);
// for run.c
void		Ssyscall(ulong);
// for run.c
ulong		ifetch(ulong);
// used to be in libmach/, but I copy pasted it in run.c
//int	arm_class(instruction);

void		updateicache(ulong addr);

ulong		getmem_2(ulong);
ulong		getmem_4(ulong);
uchar		getmem_b(ulong);
ushort		getmem_h(ulong);
uvlong		getmem_v(ulong);
ulong		getmem_w(ulong);
void		putmem_b(ulong, uchar);
void		putmem_h(ulong, ushort);
void		putmem_v(ulong, uvlong);
void		putmem_w(ulong, ulong);

void		cmd(void);
ulong		expr(char*);
char*		nextc(char*);


void		breakpoint(char*, char*);
void		delbpt(char*);
void		brkchk(ulong, int);
void		dobplist(void);

void		dumpdreg(void);
void		dumpfreg(void);
void		dumpreg(void);
void		stktrace(int);
void		printparams(Symbol*, ulong);
void		printsource(long);

// profiling
void		iprofile(void);
void		isum(void);
void		segsum(void);
void		tlbsum(void);

void*		emalloc(ulong);
void*		erealloc(void*, ulong, ulong);

void		fatal(int, char*, ...);
void		itrace(char*, ...);

// from libc.h
//long		lnrand(long);

/* Globals */
extern	Registers	reg;
extern	Memory		memory;
extern	Icache		icache;
extern	Tlb			tlb;

extern	Inst		itab[];

extern	instruction	dot;
extern	int		count;

extern	Biobuf*		bioout;
extern	Biobuf*		bin;
extern	int		text;
extern	ulong	textbase;
extern	int		datasize;

extern	Map*	symmap;	

extern	bool	trace;
extern	bool	sysdbg;
extern	bool	calltree;
extern	Breakpoint*	bplist;
extern	int		atbpt;
extern	int		membpt;

extern	jmp_buf	errjmp;

extern	int		cmdcount;
extern	int		nopcount;
extern	ulong*		iprof;

<<enum _anon_ (machine/5i/arm.h)7>>
@


\subsection*{[[machine/5i/icache.c]]}

%-------------------------------------------------------------

<<machine/5i/icache.c>>=
<<basic includes>>

<<function updateicache>>

@


\subsection*{[[machine/5i/globals.c]]}


%-------------------------------------------------------------

<<machine/5i/globals.c>>=
<<basic includes>>

#include <tos.h>

//in run.c
//Inst itab[];

<<global reg>>
<<global memory>>
<<global text>>
<<global trace>>
<<global sysdbg>>
<<global calltree>>
<<global icache>>
<<global tlb>>
<<global count>>
<<global errjmp>>
<<global bplist>>
<<global atbpt>>
<<global membpt>>
<<global cmdcount>>
<<global nopcount>>
<<global dot>>
<<global bixxx>>
<<global iprof>>
<<global symmap>>
<<global datasize>>
<<global textbase>>
@


\subsection*{[[machine/5i/utils.c]]}

%-------------------------------------------------------------

<<machine/5i/utils.c>>=
<<basic includes>>

<<function fatal>>

<<function itrace>>

<<function dumpreg>>

<<function dumpfreg>>

<<function dumpdreg>>

<<function emalloc>>

<<function erealloc>>
@


\subsection*{[[machine/5i/bpt.c]]}

%-------------------------------------------------------------

<<machine/5i/bpt.c>>=
<<basic includes>>

#include <ctype.h>

<<function dobplist>>

<<function breakpoint>>

<<function delbpt>>

<<function brkchk>>
@


\subsection*{[[machine/5i/mem.c]]}

%-------------------------------------------------------------

<<machine/5i/mem.c>>=
<<basic includes>>

void*		vaddr(ulong);

<<function ifetch>>

<<function getmem_4>>

<<function getmem_2>>

<<function getmem_w>>

<<function getmem_h>>

<<function getmem_b>>

<<function getmem_v>>

<<function putmem_h>>

<<function putmem_w>>

<<function putmem_b>>

<<function putmem_v>>

<<function memio>>

<<function dotlb>>

<<function vaddr>>
@


\subsection*{[[machine/5i/symbols.c]]}

%-------------------------------------------------------------

<<machine/5i/symbols.c>>=
<<basic includes>>

<<constant STRINGSZ>>

<<function printsource>>

<<function printlocals>>

<<function printparams>>

<<constant STARTSYM>>
<<constant FRAMENAME>>

<<function stktrace>>
@


\subsection*{[[machine/5i/run.c]]}


%-------------------------------------------------------------

<<machine/5i/run.c>>=
<<basic includes>>

<<macro XCAST>>

// forward decl
void	undef(ulong);

void	Idp0(ulong);
void	Idp1(ulong);
void	Idp2(ulong);
void	Idp3(ulong);

void	Imul(ulong);
void	Imula(ulong);
void	Imull(ulong);

void	Iswap(ulong);
void	Imem1(ulong);
void	Imem2(ulong);
void	Ilsm(ulong inst);

void	Ib(ulong);
void	Ibl(ulong);

int arm_class(instruction w);

//static	int	dummy;

<<global shtype>>
<<global cond>>

<<global itab>>


<<function runcmp>>

<<function runteq>>

<<function runtst>>

<<function run>>

<<function undef>>

<<function arm_class>>

<<function shift>>

<<function dpex>>

<<function Idp0>>

<<function Idp1>>

<<function Idp2>>

<<function Idp3>>

<<function Imul>>

<<function Imull>>

<<function Imula>>

<<function Iswap>>

<<function Imem1>>

<<function Imem2>>

<<function Ilsm>>

<<function Ib>>

<<function Ibl>>
@


\subsection*{[[machine/5i/5i.c]]}

%-------------------------------------------------------------

<<machine/5i/5i.c>>=
<<basic includes>>

#include <tos.h>

<<global file>>
<<global bxxx>>
<<global fhdr>>

<<function initmap>>

<<function inithdr>>

<<function initstk>>

<<function main>>
@


\subsection*{[[machine/5i/stats.c]]}

%-------------------------------------------------------------

<<machine/5i/stats.c>>=
<<basic includes>>

<<function Percent>>

typedef struct Prof Prof;

<<global tables>>

<<function isum>>

<<function tlbsum>>

<<global stype>>

<<function segsum>>

<<struct Prof>>
<<global aprof>>

<<function profcmp>>

<<function iprofile>>
@


\subsection*{[[machine/5i/cmd.c]]}

%-------------------------------------------------------------

<<machine/5i/cmd.c>>=
<<basic includes>>

#include <ctype.h>

<<global fmt>>
<<global width>>
<<global inc>>

<<function reset>>

<<function nextc>>

<<function numsym>>

<<function expr>>

<<function buildargv>>

<<function colon>>

<<function dollar>>

<<function pfmt>>

<<function eval>>

<<function quesie>>

<<function catcher>>

<<function setreg>>

<<function cmd>>
@


\subsection*{[[machine/5i/syscall.c]]}

%-------------------------------------------------------------

<<machine/5i/syscall.c>>=
<<basic includes>>

//#define	ODIRLEN	116	/* compatibility; used in _stat etc. */
<<constant OERRLEN>>

<<global errbuf>>
<<global nofunc>>

#include "/sys/src/libc/9syscall/sys.h"

<<global sysctab>>

<<function sysnop>>

<<function syserrstr>>
<<function sysbind>>

<<function sysfd2path>>

<<function syschdir>>

<<function sysclose>>

<<function sysdup>>

<<function sysexits>>

<<function sysopen>>

<<function sysread>>

<<function syspread>>

<<function sysseek>>

<<function syssleep>>

<<function sysstat>>

<<function sysfstat>>

<<function syswrite>>

<<function syspwrite>>

<<function syspipe>>

<<function syscreate>>

<<function sysbrk>>

<<function sysremove>>

<<function sysnotify>>




<<function sysawait>>
<<function sysrfork>>
<<function syswstat>>
<<function sysfwstat>>
<<function sysnoted>>
<<function syssegattach>>
<<function syssegdetach>>
<<function syssegfree>>
<<function syssegflush>>
<<function sysrendezvous>>
<<function sysunmount>>

<<function syssegbrk>>
<<function sysmount>>
<<function sysalarm>>
<<function sysexec>>

<<function sysfauth>>
<<function sysfversion>>

<<global systab>>

<<function Ssyscall>>
@
