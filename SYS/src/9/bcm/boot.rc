#!/boot/rc -m /boot/rcmain

/boot/echo booooooooting...

path=(/bin /boot)

# basic devices

bind -c '#e' /env
bind -a '#ec' /env # plan9.ini settings (*var variables).
bind -c '#s' /srv
bind '#p' /proc
# used by rc and many programs, e.g. via open("#d/0")
bind '#d' /fd
# can't use sys, because too much code assumes /sys/ have an include/, src/
bind '#k' /ksys

echo -n 'start' > '#c/swap'

bind -a '#P' /dev

# storage

bind -a '#S' /dev

echo fdisk...
fdisk -p /dev/sdM0/data >/dev/sdM0/ctl
dossrv
mount -c /srv/dos /root /dev/sdM0/dos
#alt? dossrv -f/dev/sdM0/dos boot
bind -a -c /root /
bind -a /arm/bin /bin
#less: bind /$cputype/bin /bin
bind -a /rc/bin /bin

# from this point we can use programs not only from /boot/
# but from the storage device in /bin/ (e.g., ramfs below, mkdir, usbd, etc)


# mouse and display

bind -a '#i' /dev # devdraw

# for rio

ramfs -m /mnt
mkdir /mnt/temp # see thread(2), used to create pipes
mkdir /mnt/wsys
# dont forget -n, otherwise rio gets confused with 'bad character in filename'
echo -n pad > /ksys/hostowner

# network

bind '#I' /net
#bind -a '#l0' /net

# for 5c, 5a, 5l
objtype=arm


#bind -a '#t' /dev

#rootdir=/root/plan9
#rootspec=''
#mount -c /srv/boot /root
#bind -ac $rootdir /
#bind -ac $rootdir/mnt /mnt

usbd

# we should normally run /root/init, but I prefer to simply run rc for now

#if (! ~ $#init 0)
#	exec `{echo $init}
#if (~ $service cpu)
#	exec /$cputype/init -c
#if not
#	exec /$cputype/init -t
exec /boot/rc -m /boot/rcmain -i

#alt: exec rio
