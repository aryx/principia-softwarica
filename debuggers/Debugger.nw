\documentclass[twocolumn]{report}
%******************************************************************************
% Prelude
%******************************************************************************
\newif\iffinal
\newif\ifverbose
\finaltrue\verbosefalse
% see also other newif in Macros.tex

%------------------------------------------------------------------------------
%history: 
%------------------------------------------------------------------------------

%thx to LP, changed for the better a few things:

%thx to codemap/codegraph:

%thx to this manual, better understand debuggers:
% - SEMI how works to be fast? via trap abuse? thx virtual memory and page
%   fault again!

%history LP-ization:
% - skeleton, mostly copy paste of Kernel.nw skeleton
% - put all content of files in the Extra section, via 'pfff -lpize'
%   which also now split in chunks!
%    * function, global, struct, enum, constant, macro(actually function)
% - TODO read Extra section, identify concepts, first TOC
% - TODO distribute parts of the file before
% - TODO nullify, boolify, typeify,    scheckify
% - TODO aspecify advanced features!
% - TODO add figures
% - TODO add explanations

%------------------------------------------------------------------------------
% Packages
%------------------------------------------------------------------------------

\usepackage{../docs/latex/noweb}
 \noweboptions{footnotesizecode,nomargintag}
 %note: allow chunk on different pages, less white space at bottom of pages
 \def\nwendcode{\endtrivlist \endgroup}
 \let\nwdocspar=\par
\usepackage{xspace}
\usepackage{verbatim}
%note: required by noweblatexpad for the \t \l \n in this file
\usepackage{fancyvrb}
\usepackage{url}
\iffinal
\usepackage{hyperref}
 \hypersetup{colorlinks=true}
\fi
\usepackage[pageref]{backref}
 \def\backref{{\footnotesize cited page(s)}~}
\usepackage{cleveref} %\cref
\usepackage{multirow}
\usepackage{booktabs} 
 \newcommand{\otoprule}{\midrule[\heavyrulewidth]}
\usepackage{graphicx}
 %\usepackage[margin=0.5in]{geometry}
 %  but eat the bottom when very low
 %\usepackage{fullpage} is deprecated 
 % => do the more manual below:
 \addtolength{\oddsidemargin}{-.850in}
 \addtolength{\evensidemargin}{-.850in}
 \addtolength{\textwidth}{1.70in}
 \addtolength{\topmargin}{-.850in}
 \addtolength{\textheight}{1.70in}
%\usepackage{minitoc}

%------------------------------------------------------------------------------
% Macros
%------------------------------------------------------------------------------
\input{../docs/latex/Macros}

%------------------------------------------------------------------------------
% Config
%------------------------------------------------------------------------------
\allcodefalse
% used for forward decl, pragmas, func decl, extern decl, stats, #ifdef,
% debugging macros

%\setcounter{tocdepth}{1}

%******************************************************************************
% Title
%******************************************************************************

\begin{document}

\title{
{\Huge 
Principia Softwarica: Plan9 Tracers and Debuggers
}\\
{version 0.1}
}

\author{
Yoann Padioleau\\
\texttt{yoann.padioleau@gmail.com}
}

\maketitle 
\onecolumn
\hrule
\begin{quote}
    Copyright \copyright{} 2014 Yoann Padioleau \\
    Permission is granted to copy, distribute and/or modify this document,
    except all the source code it contains, under the terms of the GNU Free
    Documentation License, Version 1.3.
\end{quote}
\hrule

%CONFIG: \dominitoc

\iffinal
\begingroup
\hypersetup{linkcolor=blue}
% need to s/onecolumn/twocolumn in report.cls :) for \tableofcontents
\twocolumn
\tableofcontents
\endgroup
\else
\tableofcontents
\fi

%******************************************************************************
% Body
%******************************************************************************

\chapter{Introduction}

\section{Motivations}

The goal of this book is to present in full details the source code of
a XXX.
Why? Because I think it makes you a better programmer if
you fully understand how things work under the hood.

Here are other candidates that were considered but ultimately discarded:
\begin{itemize}
\item gdb
\item strace
\item dtrace
\item valgrind
\end{itemize}


%https://www.hackerschool.com/blog/5-learning-c-with-gdb

% TODO: snap/, to lpize and include

% docs/man/2/debugger


%Need also mach.h, many helper functions to access the binary/object file

% see also cc/acid.c

%http://blog.0x972.info/?d=2014/11/13/10/40/50-how-does-a-debugger-work


\section{Getting started}

\section{Requirements}

\section{About this document}
#include "../docs/latex/About.nw"

\section{Copyright}

Most of this document is actually source code from Plan9, so
those parts are copyright by Lucent Technologies Inc.
The prose is mine and is licensed under the GNU Free Documentation
License.

\section{Acknowledgments}


\chapter{Overview}

\section{Debugger principles}

% naive = interpreter, cf Machine.nw, but very very slow.
% => hardware debugging support! so fast!

% simple: modify the code in memory at the breakpoint address given
% by user to generate a fault => when execute and reach breakpoint
% we will be given back the hand. => efficient!

% for debugger to work it needs metadata, generated by
% the assembler, the compiler, and the linker.
% See "Debugging Support" chapters in Assembler.nw, Compiler.nw,
% Linker.nw

% It also needs support from the kernel. See the Broken state
% in Kernel.nw. But it's very convenient because when segfault,
% got the core dump, actually under plan9 the process is put
% in a Broken state and can be debugged by
%  db <pid>
% Awesone (remember efuns.byte crashes)



\section{[[strace]] services}

% strace <cmd>
% simple, and very effective at find many bugs, like
% no more space in /tmp, especially when people don't check
% return error code, at least see the call to create a file in /tmp

\section{[[db]] services}

% see also Machine.nw, which has a similar interface.

% db -c <cmd>
% db <pid>

% $c => stacktrace
% $C => stacktrace with parameters values! and locals! awesome! like in Perl!
%  ex:
%  caml_main(argv=...) /home/pad/../main.c called from main+f (/home/pad/...)
%    caml_main.raise_buf/ 0x1
%    caml_main.pos/ 0x0
%    caml_main.trail/ 0x4cf2c
%    ...
%  main(argv=...) /home/pad/.../main.c called from _main+26 (.../main9.s:12)
% $r => dump registers

% :r => run
% :c => continue

% ??? dump value of a global

\section{Code organization}

\section{Architecture overview}

%###############################################################################

\chapter{Core Data Structures}

\chapter{Metadata Generation}

\section{Assembler}

\section{Compiler}

\section{Linker}

\chapter{Kernel Support}

\section{Core dumps and broken processes}

% when process crashes, it's still around, and can just run
% ps; db <pid> to start inspect! really useful.

\chapter{Conclusion}

\appendix

\chapter{Debugging}

\chapter{Error Managment}

\chapter{Libc}

\chapter{Extra Code}

\ifallcode
#include "Debugger_extra.nw"
\fi

\chapter{Changelog}
\label{sec:changelog}

\chapter{Glossary}
\label{sec:glossary}

\begin{verbatim}
\end{verbatim}

\chapter*{Indexes}
\addcontentsline{toc}{section}{Index}

%\chapter{References} 
\addcontentsline{toc}{section}{References}

\begin{thebibliography}{99}

\bibitem[1]{wp-literate-programming} Donald Knuth,,
{\em Literate Programming}, 
\url{http://en.wikipedia.org/wiki/Literate\_Program}

\bibitem[2]{noweb} Norman Ramsey,
{\em Noweb}, 
\url{http://www.cs.tufts.edu/~nr/noweb/}

\bibitem[3]{syncweb} Yoann Padioleau,
{\em Syncweb, literate programming meets unison}, 
\url{http://padator.org/software/project-syncweb/readme.txt}

\end{thebibliography}

%******************************************************************************
% Postlude
%******************************************************************************

\end{document}

