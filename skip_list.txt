# -*- sh -*-

# skip file (used by cg/cm/cq)

# GLOBAL settings

file: pfff_macros.h
#file: kernel/codegraph.h
#file: windows/codegraph.h

#dir_element: 386
dir_element: arm
dir_element: mips



# CUSTOMIZED settings

# skipped just for kernel because reexported by lib.h
#file: include/libc.h
#file: include/bio.h
#file: include/string.h
#file: include/ctype.h
#file: include/regexp.h

#file: include/mp.h
#file: include/flate.h
#file: include/pool.h
#file: include/trace.h
#
#file: include/ndb.h
#file: include/tos.h
#file: include/9p.h
#
## because of Sym dupe
#file: include/common.out.h
#file: include/a.out.h
#file: include/elf.h
#file: include/mach.h
#file: include/ar.h
#file: include/bootexec.h
#
## because of S dupe
#file: include/draw.h
#file: include/memdraw.h
#file: include/memlayer.h
#file: include/frame.h
## because of Ref dupe
#file: include/thread.h
#file: include/keyboard.h
#file: include/mouse.h
#file: include/cursor.h
### use userspace channels definition
#file: include/event.h
#
#file: include/ip.h
#
## actually needed by kernel
#file: include/fcall.h
#
### introduce backward deps, anyway code not used by kernel
#file: include/disk.h
#
#file: include/complete.h
#file: include/plumb.h
#
#file: include/auth.h
#file: include/authsrv.h
#file: include/libsec.h

#file: include/stdio.h

# ----- when focus on rio -----
#dir: kernel/devices/screen/user
##file: kernel/devices/screen/386/cga.c
## dupe with kernel/devices/screen/386/screen.c
#file: lib_graphics/libmemdraw/hwdraw.c
#dir_element: scripts
##dir_element: tests
#dir: windows/libpanel/tests
#dir: windows/apps/faces/tests/
## will generate some dupes, e.g. eresized, but nice to have apps
##dir: windows/apps
#dir: windows/apps/faces/
## have threadmain dupe with rio
#file: windows/apps/screenlock.c

# ----- when focus on kernel -----
## contains dupes
#file: lib_graphics/libdraw/mouse.c
#file: lib_graphics/libmemdraw/iprint.c
#file: lib_graphics/libmemdraw/hwdraw.c
#dir_element: tests
#dir_element: scripts
## use libc
#file: lib_graphics/libdraw/alloc.c
#file: lib_graphics/libdraw/bytesperline.c
#file: lib_graphics/libdraw/scroll.c
#file: lib_graphics/libdraw/event.c
#file: lib_graphics/libdraw/getrect.c
#file: lib_graphics/libdraw/egetrect.c
#file: lib_graphics/libdraw/keyboard.c
#file: lib_graphics/libdraw/init.c
#file: lib_graphics/libdraw/newwindow.c
#file: lib_graphics/libdraw/menuhit.c
#file: lib_graphics/libdraw/emenuhit.c
#file: lib_graphics/libdraw/font.c
#file: lib_graphics/libdraw/mkfont.c
#file: lib_graphics/libdraw/openfont.c
#file: lib_graphics/libdraw/buildfont.c
#file: lib_graphics/libdraw/getsubfont.c
#file: lib_graphics/libdraw/readsubfont.c
#file: lib_graphics/libdraw/subfontname.c
#file: lib_graphics/libdraw/unloadimage.c
#file: lib_graphics/libdraw/writeimage.c
#file: lib_graphics/libdraw/writecolmap.c
#file: lib_graphics/libdraw/readcolmap.c
#file: lib_graphics/libdraw/writesubfont.c
#file: lib_graphics/libmemdraw/openmemsubfont.c
#file: lib_graphics/libmemdraw/write.c
##for codemap when want to filter user-level code.
#dir_element: user


# INCLUDE 
#todo? spread .h in respective dirs a la ocaml? or use OPAM model of findlib?

#dir: include
#dir: include/386
dir: include/arm
dir: include/mips

# LIBS

#dir: lib_core
#dir: lib_graphics
#dir: lib_math
#dir: lib_misc
#dir: lib_networking
# this is used only by s9
dir: lib_unix

# HARDWARE

#dir: machine
#when want to process 5i/
#file: include/386/8.out.h
#dir:machine/5i
dir:machine/vi

# ASSEMBLERS/COMPILERS/GENERATORS/LINKERS

#dir: assemblers
#dir: assemblers/8a
# can't parse right now, and anyway generated code
file: assemblers/8a/y.tab.c
dir: assemblers/5a
dir: assemblers/va


#dir: compilers
#dir: compilers/8c
file: compilers/cc/y.tab.c
dir: compilers/5c
dir: compilers/vc
dir: compilers/hoc

#dir: generators
file: generators/lex/y.tab.c

#dir: linkers
#dir: linkers/8l
dir: linkers/5l
dir: linkers/vl

file: linkers/libmach/5.c
file: linkers/libmach/5db.c
file: linkers/libmach/5obj.c
file: linkers/libmach/v.c
file: linkers/libmach/vdb.c
file: linkers/libmach/vobj.c
file: linkers/libmach/mips2ureg.h

# INTERPRETERS
#dir: interpreters/s9

# OPERATING SYSTEM

#dir: kernel
file: kernel/devices/keyboard/386/latin1.c
file: kernel/devices/keyboard/386/latin1.h
# use libc stack, not kernel stack
dir: kernel/init/user/boot/
# huge files, contains binary code of /boot programs, for better codemap
file: kernel/conf/qemu.root.s
file: sys/src/9/pc/qemu.root.s

#dir: shells
file: shells/rc/unix.h
file: shells/rc/unix.c
file: shells/rc/win32.c
file: shells/rc/haventfork.c
file: shells/rc/y.tab.c
#less: there is a x.tab.h, could get rid of it, not-so-useful hack
file: shells/rc/y.tab.h

#dir: windows
dir: windows/plumb
# parse error, advanced macro uses, no closing paren
file: lib_graphics/libmemdraw/replmul.c


# DEVELOPER TOOLS

#dir: builders

#dir: debuggers
file: debuggers/acid/y.tab.c
# dupes with kernel, Proc, Page.
dir: debuggers/snap

#dir: profilers

#dir: editors
dir: editors/acme
dir: editors/sam

# APPLICATIONS

#dir: utilities
file: utilities/string/grep/y.tab.c

dir: browsers
dir: misc-apps

# MISC

dir: database
dir: graphics

dir: networking
dir: security

dir: sys

dir: BIG
dir: ROOT
dir: docs
