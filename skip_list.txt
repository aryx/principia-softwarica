# -*- sh -*-

# for cg/cm skipping

# INCLUDE 
#less: spread .h in respective dirs, a la ocaml? or use OPAM model of findlib?

#dir: include
dir: include/arm
dir: include/mips
#dir: include/386

# LIBS

#dir: lib_core
#dir: lib_graphics
#dir: lib_math
#dir: lib_misc
#dir: lib_networking

# HARDWARE

#dir: machine
dir:machine/vi
#dir:machine/5i

# ASSEMBLERS/COMPILERS/LINKERS

#dir: assemblers
dir: assemblers/5a
dir: assemblers/va
#dir: assemblers/8a

#dir: compilers
dir: compilers/5c
dir: compilers/vc
dir: compilers/hoc
#dir: compilers/8c
#file: compilers/cc/lexbody.clang2

#dir: generators

#dir: linkers
dir: linkers/5l
dir: linkers/vl
#dir: linkers/8l
file: linkers/libmach/v.c.clang2
file: linkers/libmach/5.c.clang2
#file: linkers/libmach/8.c.clang2

# OPERATING SYSTEM

#dir: kernel
#when focus on kernel, because re-exported in kernel/lib/lib.h
file: include/libc.h.clang2
#file: include/fcall.h.clang2 # actually needed
file: include/event.h.clang2
file: include/mach.h.clang2
file: include/ip.h.clang2
file: include/9p.h.clang2
file: include/thread.h.clang2
file: include/bio.h.clang2
file: include/ndb.h.clang2
# use libc stack, not kernel stack
dir: kernel/init/user/boot/
# use libc stack, so skip too (but lead to FP on no def found for startboot)
file: kernel/init/user/preboot/initcode.c.clang2
#for codemap when want to filter user-level code.
dir_element: user
#dir_element: 386
dir_element: arm
dir_element: mips
# huge files, contains binary code of /boot programs
file: kernel/conf/qemu.root.s
file: sys/src/9/pc/qemu.root.s


#dir: shells

#dir: windows
dir: windows/plumb

# DEVELOPER TOOLS

#dir: builders

#dir: debuggers

#dir: profilers

#dir: editors
dir: editors/acme
dir: editors/sam

# APPLICATIONS

#dir: utilities

dir: browsers
dir: misc-apps

# MISC

dir: database
dir: graphics
dir: networking
dir: security

#dir: sys

dir: BIG
dir: ROOT
dir: docs
